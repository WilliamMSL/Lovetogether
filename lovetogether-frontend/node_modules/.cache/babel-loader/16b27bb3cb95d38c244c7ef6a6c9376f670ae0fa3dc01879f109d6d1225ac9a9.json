{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/MainContent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Navbar from './navbar/navbar';\nimport CardsWrapper from './CardsWrapper';\nimport { useCard } from './CardContext';\nimport NavbarRight from './navbar/navbarright';\nimport CardRenderer from './CardRenderer';\nimport gsap from 'gsap';\nimport LogoImage2 from '../images/logo-5.svg'; // Importation du logo\nimport GrainEffect from './GrainEffect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  background-color: ${({\n  bgColor\n}) => bgColor};\n`;\n_c = BackgroundContainer;\nconst LogoContainer = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 80%; /* Ajustez la largeur du logo pour qu'il soit bien visible */\n  max-width: 600px; /* Limite la taille maximale pour garder une bonne visibilité */\n  z-index: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = LogoContainer;\nconst LogoImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n_c3 = LogoImage;\nconst CardsContainer = styled.div`\n  opacity: ${({\n  opacity\n}) => opacity};\n  transform: translateY(${({\n  isAnimated\n}) => isAnimated ? '0' : '50px'});\n  transition: ${({\n  isAnimated\n}) => isAnimated ? 'transform 0.8s ease, opacity 0.8s ease' : 'none'};\n  pointer-events: ${({\n  clickable\n}) => clickable ? 'auto' : 'none'};\n  z-index: 20;\n`;\n_c4 = CardsContainer;\nconst GrainContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 0;\n`;\n_c5 = GrainContainer;\nconst MainContent = ({\n  backgroundColor,\n  setBackgroundColor\n}) => {\n  _s();\n  const {\n    selectedCard,\n    resetCards\n  } = useCard();\n  const [cardsOpacity, setCardsOpacity] = useState(1);\n  const [isAnimated, setIsAnimated] = useState(true);\n  const [cardsClickable, setCardsClickable] = useState(true);\n  const cardsRef = useRef(null);\n  const handleXIconClick = () => {\n    // Remettre la couleur de fond à blanc\n    setBackgroundColor('#FFFFFF');\n\n    // Attendre que la couleur de fond soit mise à jour avant de réinitialiser les cartes\n    setTimeout(() => {\n      resetCards();\n      setIsAnimated(false);\n      setCardsOpacity(1);\n      setCardsClickable(true);\n      if (cardsRef.current) {\n        gsap.set(cardsRef.current, {\n          opacity: 1\n        });\n      }\n    }, 0); // Mettre un petit délai pour s'assurer que le fond est réinitialisé avant l'affichage des cartes\n  };\n  useEffect(() => {\n    // Démarrer l'animation des cartes lors du montage du composant\n    if (cardsRef.current) {\n      gsap.to(cardsRef.current, {\n        opacity: 1,\n        y: 0,\n        duration: 0.8,\n        ease: 'power4.out',\n        delay: 0.1,\n        onComplete: () => {\n          setCardsClickable(true);\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    // Réinitialiser le fond à blanc si aucune carte n'est sélectionnée (c'est-à-dire retour à l'état initial)\n    if (!selectedCard) {\n      setBackgroundColor('#FFFFFF');\n    }\n  }, [selectedCard, setBackgroundColor]);\n  return /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n    bgColor: backgroundColor,\n    children: [/*#__PURE__*/_jsxDEV(GrainContainer, {\n      children: /*#__PURE__*/_jsxDEV(GrainEffect, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoContainer, {\n      children: /*#__PURE__*/_jsxDEV(LogoImage, {\n        src: LogoImage2,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavbarRight, {\n      onResetAnimation: handleXIconClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), !selectedCard && /*#__PURE__*/_jsxDEV(CardsContainer, {\n      ref: cardsRef,\n      opacity: cardsOpacity,\n      isAnimated: isAnimated,\n      clickable: cardsClickable,\n      children: /*#__PURE__*/_jsxDEV(CardsWrapper, {\n        setBackgroundColor: setBackgroundColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), selectedCard && /*#__PURE__*/_jsxDEV(CardRenderer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(MainContent, \"jA1FQJsOrsf+XZNC2Lr1vYdmOio=\", false, function () {\n  return [useCard];\n});\n_c6 = MainContent;\nexport default MainContent;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"BackgroundContainer\");\n$RefreshReg$(_c2, \"LogoContainer\");\n$RefreshReg$(_c3, \"LogoImage\");\n$RefreshReg$(_c4, \"CardsContainer\");\n$RefreshReg$(_c5, \"GrainContainer\");\n$RefreshReg$(_c6, \"MainContent\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styled","Navbar","CardsWrapper","useCard","NavbarRight","CardRenderer","gsap","LogoImage2","GrainEffect","jsxDEV","_jsxDEV","BackgroundContainer","div","bgColor","_c","LogoContainer","_c2","LogoImage","img","_c3","CardsContainer","opacity","isAnimated","clickable","_c4","GrainContainer","_c5","MainContent","backgroundColor","setBackgroundColor","_s","selectedCard","resetCards","cardsOpacity","setCardsOpacity","setIsAnimated","cardsClickable","setCardsClickable","cardsRef","handleXIconClick","setTimeout","current","set","to","y","duration","ease","delay","onComplete","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onResetAnimation","ref","_c6","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/MainContent.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Navbar from './navbar/navbar';\nimport CardsWrapper from './CardsWrapper';\nimport { useCard } from './CardContext';\nimport NavbarRight from './navbar/navbarright';\nimport CardRenderer from './CardRenderer';\nimport gsap from 'gsap';\nimport LogoImage2 from '../images/logo-5.svg'; // Importation du logo\nimport GrainEffect from './GrainEffect';\n\nconst BackgroundContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  background-color: ${({ bgColor }) => bgColor};\n`;\n\nconst LogoContainer = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 80%; /* Ajustez la largeur du logo pour qu'il soit bien visible */\n  max-width: 600px; /* Limite la taille maximale pour garder une bonne visibilité */\n  z-index: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LogoImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nconst CardsContainer = styled.div`\n  opacity: ${({ opacity }) => opacity};\n  transform: translateY(${({ isAnimated }) => (isAnimated ? '0' : '50px')});\n  transition: ${({ isAnimated }) => (isAnimated ? 'transform 0.8s ease, opacity 0.8s ease' : 'none')};\n  pointer-events: ${({ clickable }) => (clickable ? 'auto' : 'none')};\n  z-index: 20;\n`;\n\nconst GrainContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 0;\n`;\n\nconst MainContent = ({ backgroundColor, setBackgroundColor }) => {\n  const { selectedCard, resetCards } = useCard();\n  const [cardsOpacity, setCardsOpacity] = useState(1); \n  const [isAnimated, setIsAnimated] = useState(true); \n  const [cardsClickable, setCardsClickable] = useState(true); \n  const cardsRef = useRef(null);\n\n  const handleXIconClick = () => {\n    // Remettre la couleur de fond à blanc\n    setBackgroundColor('#FFFFFF');\n\n    // Attendre que la couleur de fond soit mise à jour avant de réinitialiser les cartes\n    setTimeout(() => {\n      resetCards();\n      setIsAnimated(false);\n      setCardsOpacity(1);\n      setCardsClickable(true);\n\n      if (cardsRef.current) {\n        gsap.set(cardsRef.current, {\n          opacity: 1,\n        });\n      }\n    }, 0); // Mettre un petit délai pour s'assurer que le fond est réinitialisé avant l'affichage des cartes\n  };\n\n  useEffect(() => {\n    // Démarrer l'animation des cartes lors du montage du composant\n    if (cardsRef.current) {\n      gsap.to(cardsRef.current, {\n        opacity: 1,\n        y: 0,\n        duration: 0.8,\n        ease: 'power4.out',\n        delay: 0.1,\n        onComplete: () => {\n          setCardsClickable(true);\n        },\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    // Réinitialiser le fond à blanc si aucune carte n'est sélectionnée (c'est-à-dire retour à l'état initial)\n    if (!selectedCard) {\n      setBackgroundColor('#FFFFFF');\n    }\n  }, [selectedCard, setBackgroundColor]);\n\n  return (\n    <BackgroundContainer bgColor={backgroundColor}>\n      <GrainContainer>\n        <GrainEffect />\n      </GrainContainer>\n\n      <LogoContainer>\n        <LogoImage src={LogoImage2} alt=\"Logo\" />\n      </LogoContainer>\n\n      <Navbar />\n      <NavbarRight onResetAnimation={handleXIconClick} />\n\n      {!selectedCard && (\n        <CardsContainer\n          ref={cardsRef}\n          opacity={cardsOpacity}\n          isAnimated={isAnimated}\n          clickable={cardsClickable}\n        >\n          <CardsWrapper setBackgroundColor={setBackgroundColor} />\n        </CardsContainer>\n      )}\n\n      {selectedCard && <CardRenderer />}\n    </BackgroundContainer>\n  );\n};\n\nexport default MainContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}