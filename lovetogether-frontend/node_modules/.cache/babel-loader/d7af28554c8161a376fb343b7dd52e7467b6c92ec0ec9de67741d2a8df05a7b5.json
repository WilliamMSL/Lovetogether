{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n`;\n_c = Container;\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = CardsContainer;\nconst CardWrapper = styled.div`\n  perspective: 1000px;\n  width: 392px;\n  height: 548px;\n  position: absolute;\n  cursor: pointer;\n`;\n_c3 = CardWrapper;\nconst Footer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  color: #000000;\n  margin-top: 20px;\n`;\n_c4 = Footer;\nconst CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n`;\n_c5 = CardInner;\nconst CardFace = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 16px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n`;\nconst CardFront = styled(CardFace)`\n  background-image: url(${props => props.image});\n`;\n_c6 = CardFront;\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n`;\n_c7 = Title;\nconst CardBack = styled(CardFace)`\n  background-color: white;\n  transform: rotateY(180deg);\n  display:flex;\n  flex-direction:column;\n  padding: 48px;\n  justify-content: space-between;\n`;\n_c8 = CardBack;\nconst CardText = styled.div`\n  color: #333;\n  font-family: Paragon;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n_c9 = CardText;\nconst ButtonContainer = styled.div`\n  position:absolute;\n  bottom : 48px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n_c10 = ButtonContainer;\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  color: #000;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    background-color: #fff5f5;\n    color: #ff4500;\n    border-color: #ff4500;\n    box-shadow: 0 6px 12px rgba(255, 69, 0, 0.3);\n  }\n`;\n_c11 = Button;\nconst ActionVerite = ({\n  selectedToys\n}) => {\n  _s();\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // Flag pour éviter les appels API multiples\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n\n  // Récupérer les prénoms depuis le local storage\n  const [currentPlayer, setCurrentPlayer] = useState('');\n  const [firstName1, setFirstName1] = useState('');\n  const [firstName2, setFirstName2] = useState('');\n  useEffect(() => {\n    const savedPreferences = localStorage.getItem('userPreferences');\n    if (savedPreferences) {\n      const {\n        firstName1,\n        firstName2\n      } = JSON.parse(savedPreferences);\n      setFirstName1(firstName1 || '');\n      setFirstName2(firstName2 || '');\n      setCurrentPlayer(firstName1 || ''); // Initialiser avec firstName1\n    }\n  }, []);\n  useEffect(() => {\n    console.log('useEffect - currentPlayer:', currentPlayer);\n    console.log('useEffect - clickedCard:', clickedCard);\n    // Positionner les cartes avec un espacement de 150px par défaut\n    gsap.set(leftCardRef.current, {\n      x: '-150px',\n      rotation: -10\n    });\n    gsap.set(rightCardRef.current, {\n      x: '150px',\n      rotation: 10\n    });\n  }, [currentPlayer, clickedCard]);\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const toysParam = selectedToys !== null && selectedToys !== void 0 && selectedToys.length ? selectedToys.join(',') : '';\n      console.log('Fetching with type:', type, 'toys:', toysParam, 'player:', player);\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: {\n          type: type,\n          toys: toysParam,\n          player: player\n        }\n      });\n      console.log('Raw API response:', response);\n      console.log('API response data:', response.data);\n      if (response.data && response.data.template) {\n        return response.data.template;\n      } else {\n        console.error('Invalid response format:', response.data);\n        return 'No data available';\n      }\n    } catch (error) {\n      console.error(`Error fetching random ${type}:`, error);\n      return 'Error loading text';\n    }\n  };\n  const handleCardClick = async card => {\n    if (clickedCard || isLoading) return; // Empêche les clics multiples\n\n    try {\n      setIsLoading(true);\n      setClickedCard(card);\n      let randomText = '';\n      console.log('Card clicked:', card);\n      console.log('Before API call - currentPlayer:', currentPlayer);\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', 'shared'); // Truths sont partagées\n\n        setRandomText(randomText);\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n        setRandomText(randomText);\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: -1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const resetCards = () => {\n    setClickedCard(null);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    gsap.to(leftCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(rightCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(leftCardRef.current, {\n      duration: 0.8,\n      x: '-150px',\n      rotation: -10,\n      scale: 1,\n      opacity: 1\n    });\n    gsap.to(rightCardRef.current, {\n      duration: 0.8,\n      x: '150px',\n      rotation: 10,\n      scale: 1,\n      opacity: 1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CardsContainer, {\n      children: /*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: leftCardRef,\n        onClick: () => handleCardClick('left'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/junebaby.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: [currentPlayer, \", \", clickedCard === 'right' && randomText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: resetCards,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"Tour\",\n          children: \"\\uD83D\\uDC64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), \" Joueur suivant\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionVerite, \"KbfdQR5syemg9ZVI/uYw9hAdCLQ=\");\n_c12 = ActionVerite;\nexport default ActionVerite;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CardsContainer\");\n$RefreshReg$(_c3, \"CardWrapper\");\n$RefreshReg$(_c4, \"Footer\");\n$RefreshReg$(_c5, \"CardInner\");\n$RefreshReg$(_c6, \"CardFront\");\n$RefreshReg$(_c7, \"Title\");\n$RefreshReg$(_c8, \"CardBack\");\n$RefreshReg$(_c9, \"CardText\");\n$RefreshReg$(_c10, \"ButtonContainer\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"ActionVerite\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styled","gsap","axios","jsxDEV","_jsxDEV","Container","div","_c","CardsContainer","_c2","CardWrapper","_c3","Footer","_c4","CardInner","_c5","CardFace","CardFront","props","image","_c6","Title","h1","_c7","CardBack","_c8","CardText","_c9","ButtonContainer","_c10","Button","button","_c11","ActionVerite","selectedToys","_s","clickedCard","setClickedCard","randomText","setRandomText","isLoading","setIsLoading","leftCardRef","rightCardRef","currentPlayer","setCurrentPlayer","firstName1","setFirstName1","firstName2","setFirstName2","savedPreferences","localStorage","getItem","JSON","parse","console","log","set","current","x","rotation","fetchRandomActionOrTruth","type","player","toysParam","length","join","response","get","params","toys","data","template","error","handleCardClick","card","to","duration","y","scale","opacity","setTimeout","querySelector","rotationY","resetCards","prevPlayer","children","ref","onClick","className","require","fileName","_jsxFileName","lineNumber","columnNumber","role","_c12","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n`;\n\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CardWrapper = styled.div`\n  perspective: 1000px;\n  width: 392px;\n  height: 548px;\n  position: absolute;\n  cursor: pointer;\n`;\n\nconst Footer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  color: #000000;\n  margin-top: 20px;\n`;\n\nconst CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n`;\n\nconst CardFace = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 16px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst CardFront = styled(CardFace)`\n  background-image: url(${props => props.image});\n`;\n\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n`;\n\nconst CardBack = styled(CardFace)`\n  background-color: white;\n  transform: rotateY(180deg);\n  display:flex;\n  flex-direction:column;\n  padding: 48px;\n  justify-content: space-between;\n`;\n\nconst CardText = styled.div`\n  color: #333;\n  font-family: Paragon;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n\nconst ButtonContainer = styled.div`\n  position:absolute;\n  bottom : 48px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  color: #000;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    background-color: #fff5f5;\n    color: #ff4500;\n    border-color: #ff4500;\n    box-shadow: 0 6px 12px rgba(255, 69, 0, 0.3);\n  }\n`;\n\nconst ActionVerite = ({ selectedToys }) => {\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // Flag pour éviter les appels API multiples\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n\n  // Récupérer les prénoms depuis le local storage\n  const [currentPlayer, setCurrentPlayer] = useState('');\n  const [firstName1, setFirstName1] = useState('');\n  const [firstName2, setFirstName2] = useState('');\n\n  useEffect(() => {\n    const savedPreferences = localStorage.getItem('userPreferences');\n    if (savedPreferences) {\n      const { firstName1, firstName2 } = JSON.parse(savedPreferences);\n      setFirstName1(firstName1 || '');\n      setFirstName2(firstName2 || '');\n      setCurrentPlayer(firstName1 || ''); // Initialiser avec firstName1\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log('useEffect - currentPlayer:', currentPlayer);\n    console.log('useEffect - clickedCard:', clickedCard);\n    // Positionner les cartes avec un espacement de 150px par défaut\n    gsap.set(leftCardRef.current, { x: '-150px', rotation: -10 });\n    gsap.set(rightCardRef.current, { x: '150px', rotation: 10 });\n  }, [currentPlayer, clickedCard]);\n\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const toysParam = selectedToys?.length ? selectedToys.join(',') : '';\n      console.log('Fetching with type:', type, 'toys:', toysParam, 'player:', player);\n\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: { type: type, toys: toysParam, player: player }\n      });\n\n      console.log('Raw API response:', response);\n      console.log('API response data:', response.data);\n\n      if (response.data && response.data.template) {\n        return response.data.template;\n      } else {\n        console.error('Invalid response format:', response.data);\n        return 'No data available';\n      }\n    } catch (error) {\n      console.error(`Error fetching random ${type}:`, error);\n      return 'Error loading text';\n    }\n  };\n\n  const handleCardClick = async (card) => {\n    if (clickedCard || isLoading) return; // Empêche les clics multiples\n\n    try {\n      setIsLoading(true);\n      setClickedCard(card);\n      let randomText = '';\n\n      console.log('Card clicked:', card);\n      console.log('Before API call - currentPlayer:', currentPlayer);\n\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', 'shared'); // Truths sont partagées\n\n        setRandomText(randomText);\n        gsap.to(leftCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 1000, opacity: 0 });\n\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n\n        setRandomText(randomText);\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(leftCardRef.current, { duration: 0.8, x: -1000, opacity: 0 });\n\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetCards = () => {\n    setClickedCard(null);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(leftCardRef.current, { duration: 0.8, x: '-150px', rotation: -10, scale: 1, opacity: 1 });\n    gsap.to(rightCardRef.current, { duration: 0.8, x: '150px', rotation: 10, scale: 1, opacity: 1 });\n  };\n\n  return (\n    <Container>\n      <CardsContainer>\n        <CardWrapper\n          ref={leftCardRef}\n          onClick={() => handleCardClick('left')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/junebaby.png')} />\n            <CardBack>\n            <Title>Truth & Dare</Title>\n              <CardText>{currentPlayer}, {clickedCard === 'right' && randomText}</CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n\n      </CardsContainer>\n      <ButtonContainer>\n        <Button onClick={resetCards}>\n          <span role=\"img\" aria-label=\"Tour\">👤</span> Joueur suivant\n        </Button>\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nexport default ActionVerite;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}