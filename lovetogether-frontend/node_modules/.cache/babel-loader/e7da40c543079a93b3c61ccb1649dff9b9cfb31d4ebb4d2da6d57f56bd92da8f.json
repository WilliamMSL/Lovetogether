{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nimport lowIntensityImage from '../images/logo-5.svg';\nimport mediumIntensityImage from '../images/whitelogo-10.svg';\nimport highIntensityImage from '../images/whitelogo-20.svg';\nimport GrainEffect from './GrainEffect';\nimport AVCardWrapper from './AVCardWrapper';\nimport AVTimerAndButtons from './AVTimerAndButtons';\nimport AVModal from './AVModal';\nimport timerSound from '../sound/gong.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({\n  intensity\n}) => intensity === 'low' ? '#FBF8F1' : intensity === 'medium' ? '#D51C2C' : '#5A0C13'};\n  background-image: ${({\n  intensity\n}) => intensity === 'low' ? `url(${lowIntensityImage})` : intensity === 'medium' ? `url(${mediumIntensityImage})` : `url(${highIntensityImage})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 1;\n`;\n_c = Container;\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n_c2 = CardsContainer;\nconst TimerRectangle = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: 0;\n  background-color: rgba(255, 69, 0, 0.5);\n  z-index: 2;\n`;\n_c3 = TimerRectangle;\nconst ActionVerite = () => {\n  _s();\n  const {\n    firstName1,\n    firstName2,\n    selectedToys\n  } = useContext(UserContext);\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const intervalRef = useRef(null);\n  const [showSkipButton, setShowSkipButton] = useState(false);\n  const timerRectangleRef = useRef(null);\n  const animationRef = useRef(null);\n  const [dareCount, setDareCount] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n  const [currentPlayer, setCurrentPlayer] = useState(firstName1 || '');\n  const [intensity, setIntensity] = useState('low');\n  useEffect(() => {\n    console.log(\"ActionVerite - Loaded user data from context:\", {\n      firstName1,\n      firstName2,\n      selectedToys\n    });\n    setCurrentPlayer(firstName1 || '');\n  }, [firstName1, firstName2, selectedToys]);\n  useEffect(() => {\n    gsap.set(leftCardRef.current, {\n      x: '-150px',\n      rotation: -10\n    });\n    gsap.set(rightCardRef.current, {\n      x: '150px',\n      rotation: 10\n    });\n  }, [intensity]);\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const otherPlayer = player === firstName1 ? firstName2 : firstName1;\n      const toysParam = selectedToys !== null && selectedToys !== void 0 && selectedToys.length ? [...selectedToys, 'all'] : ['all'];\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: {\n          type: type,\n          player: mappedPlayer,\n          toys: toysParam.join(','),\n          intensity: intensity\n        }\n      });\n      if (response.data && response.data.template) {\n        let {\n          template,\n          duration\n        } = response.data;\n        setDuration(duration || null);\n        setRemainingTime(duration);\n        template = template.charAt(0).toLowerCase() + template.slice(1);\n        template = template.replace('{Currentplayer}', player).replace('{AutrePlayer}', otherPlayer);\n        return template;\n      } else {\n        return 'No data available';\n      }\n    } catch (error) {\n      console.error('Error loading text:', error);\n      return 'Error loading text';\n    }\n  };\n  const handleCardClick = async card => {\n    if (clickedCard) return;\n    try {\n      let randomText = '';\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n        setDareCount(prevCount => {\n          if (prevCount + 1 >= 10 && intensity === 'low') {\n            setShowModal(true);\n          }\n          return prevCount + 1;\n        });\n      }\n      setRandomText(randomText);\n      setClickedCard(card);\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: -1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      }\n      if (duration) {\n        setShowSkipButton(true);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null);\n    setRemainingTime(null);\n    setIsPaused(false);\n    setIsStarted(false);\n    setShowSkipButton(false);\n    clearInterval(intervalRef.current);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    if (animationRef.current) {\n      animationRef.current.kill();\n      animationRef.current = null;\n    }\n    gsap.set(timerRectangleRef.current, {\n      height: '0%'\n    });\n    gsap.to(leftCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(rightCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(leftCardRef.current, {\n      duration: 0.8,\n      x: '-150px',\n      rotation: -10,\n      scale: 1,\n      opacity: 1\n    });\n    gsap.to(rightCardRef.current, {\n      duration: 0.8,\n      x: '150px',\n      rotation: 10,\n      scale: 1,\n      opacity: 1\n    });\n  };\n  const startTimer = () => {\n    if (!remainingTime || remainingTime <= 0) {\n      setRemainingTime(duration);\n    }\n    clearInterval(intervalRef.current);\n    setIsStarted(true);\n    setIsPaused(false);\n    console.log(\"Timer started with duration:\", remainingTime);\n    if (animationRef.current) {\n      animationRef.current.resume();\n    } else {\n      animationRef.current = gsap.to(timerRectangleRef.current, {\n        height: '100%',\n        duration: remainingTime,\n        ease: 'linear',\n        onComplete: () => {\n          console.log(\"Timer and animation complete.\");\n          setIsStarted(false);\n        }\n      }).play();\n    }\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          playSound();\n          console.log(\"Timer reached zero, interval cleared.\");\n          return 0;\n        }\n        console.log(\"Timer ticking:\", prevTime - 1);\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n  const resetAndStartTimer = () => {\n    console.log(\"Recommencer button clicked - resetting and starting timer\");\n    clearInterval(intervalRef.current);\n    setRemainingTime(duration);\n    setIsPaused(false);\n    setIsStarted(true);\n    if (animationRef.current) {\n      animationRef.current.kill();\n      animationRef.current = null;\n    }\n    gsap.set(timerRectangleRef.current, {\n      height: '0%'\n    });\n    animationRef.current = gsap.to(timerRectangleRef.current, {\n      height: '100%',\n      duration: duration,\n      ease: 'linear',\n      onComplete: () => {\n        console.log(\"Timer and animation complete.\");\n        setIsStarted(false);\n      }\n    });\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          playSound();\n          console.log(\"Timer reached zero, interval cleared.\");\n          return 0;\n        }\n        console.log(\"Timer ticking:\", prevTime - 1);\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n  const handleTimerButtonClick = () => {\n    if (!isStarted) {\n      startTimer();\n    } else if (isPaused) {\n      startTimer();\n    } else {\n      pauseTimer();\n    }\n  };\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n    if (animationRef.current) {\n      animationRef.current.pause();\n    }\n  };\n  const handleSkipClick = () => {\n    resetCards();\n  };\n  const changeIntensity = () => {\n    setIntensity(prev => {\n      if (prev === 'low') return 'medium';\n      if (prev === 'medium') return 'high';\n      return 'low';\n    });\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n  const playSound = () => {\n    const audio = new Audio(timerSound);\n    audio.play();\n  };\n  const handleModalAccept = () => {\n    setIntensity('medium');\n    setShowModal(false);\n    setDareCount(0);\n  };\n  const handleModalDecline = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    intensity: intensity,\n    children: [/*#__PURE__*/_jsxDEV(CardsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(AVCardWrapper, {\n        ref: leftCardRef,\n        side: \"left\",\n        handleCardClick: handleCardClick,\n        clickedCard: clickedCard,\n        randomText: randomText,\n        currentPlayer: currentPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AVCardWrapper, {\n        ref: rightCardRef,\n        side: \"right\",\n        handleCardClick: handleCardClick,\n        clickedCard: clickedCard,\n        randomText: randomText,\n        currentPlayer: currentPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerRectangle, {\n      ref: timerRectangleRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AVTimerAndButtons, {\n      clickedCard: clickedCard,\n      currentPlayer: currentPlayer,\n      intensity: intensity,\n      isStarted: isStarted,\n      isPaused: isPaused,\n      remainingTime: remainingTime,\n      showSkipButton: showSkipButton,\n      duration: duration,\n      handleTimerButtonClick: handleTimerButtonClick,\n      resetAndStartTimer: resetAndStartTimer,\n      handleSkipClick: handleSkipClick,\n      changeIntensity: changeIntensity,\n      formatTime: formatTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(AVModal, {\n      title: \"Passer \\xE0 Foreplay ?\",\n      message: \"Vous avez r\\xE9alis\\xE9 plusieurs challenges en Warm-Up. Voulez-vous passer \\xE0 l'intensit\\xE9 Foreplay ?\",\n      onAccept: handleModalAccept,\n      onDecline: handleModalDecline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GrainEffect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionVerite, \"D289TKeLy2s4s2d+rKAwCrfoKqs=\");\n_c4 = ActionVerite;\nexport default ActionVerite;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CardsContainer\");\n$RefreshReg$(_c3, \"TimerRectangle\");\n$RefreshReg$(_c4, \"ActionVerite\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useContext","styled","gsap","axios","UserContext","lowIntensityImage","mediumIntensityImage","highIntensityImage","GrainEffect","AVCardWrapper","AVTimerAndButtons","AVModal","timerSound","jsxDEV","_jsxDEV","Container","div","intensity","_c","CardsContainer","_c2","TimerRectangle","_c3","ActionVerite","_s","firstName1","firstName2","selectedToys","clickedCard","setClickedCard","randomText","setRandomText","duration","setDuration","remainingTime","setRemainingTime","isPaused","setIsPaused","isStarted","setIsStarted","intervalRef","showSkipButton","setShowSkipButton","timerRectangleRef","animationRef","dareCount","setDareCount","showModal","setShowModal","leftCardRef","rightCardRef","currentPlayer","setCurrentPlayer","setIntensity","console","log","set","current","x","rotation","fetchRandomActionOrTruth","type","player","mappedPlayer","otherPlayer","toysParam","length","response","get","params","toys","join","data","template","charAt","toLowerCase","slice","replace","error","handleCardClick","card","prevCount","to","y","scale","opacity","setTimeout","querySelector","rotationY","resetCards","clearInterval","prevPlayer","kill","height","startTimer","resume","ease","onComplete","play","setInterval","prevTime","playSound","resetAndStartTimer","handleTimerButtonClick","pauseTimer","pause","handleSkipClick","changeIntensity","prev","formatTime","seconds","minutes","Math","floor","secs","audio","Audio","handleModalAccept","handleModalDecline","children","ref","side","fileName","_jsxFileName","lineNumber","columnNumber","title","message","onAccept","onDecline","_c4","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nimport lowIntensityImage from '../images/logo-5.svg';\nimport mediumIntensityImage from '../images/whitelogo-10.svg';\nimport highIntensityImage from '../images/whitelogo-20.svg';\nimport GrainEffect from './GrainEffect';\nimport AVCardWrapper from './AVCardWrapper';\nimport AVTimerAndButtons from './AVTimerAndButtons';\nimport AVModal from './AVModal';\nimport timerSound from '../sound/gong.mp3';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({ intensity }) => \n    intensity === 'low' ? '#FBF8F1' : \n    intensity === 'medium' ? '#D51C2C' : \n    '#5A0C13'};\n  background-image: ${({ intensity }) => \n    intensity === 'low' ? `url(${lowIntensityImage})` : \n    intensity === 'medium' ? `url(${mediumIntensityImage})` : \n    `url(${highIntensityImage})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 1;\n`;\n\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n\nconst TimerRectangle = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: 0;\n  background-color: rgba(255, 69, 0, 0.5);\n  z-index: 2;\n`;\n\nconst ActionVerite = () => {\n  const { firstName1, firstName2, selectedToys } = useContext(UserContext);\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const intervalRef = useRef(null);\n  const [showSkipButton, setShowSkipButton] = useState(false);\n  const timerRectangleRef = useRef(null);\n  const animationRef = useRef(null);\n  const [dareCount, setDareCount] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n\n  const [currentPlayer, setCurrentPlayer] = useState(firstName1 || '');\n  const [intensity, setIntensity] = useState('low');\n\n  useEffect(() => {\n    console.log(\"ActionVerite - Loaded user data from context:\", { firstName1, firstName2, selectedToys });\n    setCurrentPlayer(firstName1 || '');\n  }, [firstName1, firstName2, selectedToys]);\n\n  useEffect(() => {\n    gsap.set(leftCardRef.current, { x: '-150px', rotation: -10 });\n    gsap.set(rightCardRef.current, { x: '150px', rotation: 10 });\n  }, [intensity]);\n\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n        const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n        const otherPlayer = player === firstName1 ? firstName2 : firstName1;\n        const toysParam = selectedToys?.length ? [...selectedToys, 'all'] : ['all'];\n\n        const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n            params: { type: type, player: mappedPlayer, toys: toysParam.join(','), intensity: intensity }\n        });\n\n        if (response.data && response.data.template) {\n            let { template, duration } = response.data;\n            setDuration(duration || null);\n            setRemainingTime(duration);\n\n            template = template.charAt(0).toLowerCase() + template.slice(1);\n\n            template = template.replace('{Currentplayer}', player)\n                               .replace('{AutrePlayer}', otherPlayer);\n\n            return template;\n        } else {\n            return 'No data available';\n        }\n    } catch (error) {\n        console.error('Error loading text:', error);\n        return 'Error loading text';\n    }\n  };\n\n  const handleCardClick = async (card) => {\n    if (clickedCard) return;\n\n    try {\n      let randomText = '';\n\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n        setDareCount(prevCount => {\n          if (prevCount + 1 >= 10 && intensity === 'low') {\n            setShowModal(true);\n          }\n          return prevCount + 1;\n        });\n      }\n\n      setRandomText(randomText);\n      setClickedCard(card);\n\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(leftCardRef.current, { duration: 0.8, x: -1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      }\n\n      if (duration) {\n        setShowSkipButton(true);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null);\n    setRemainingTime(null);\n    setIsPaused(false);\n    setIsStarted(false);\n    setShowSkipButton(false);\n    clearInterval(intervalRef.current);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n\n    if (animationRef.current) {\n      animationRef.current.kill();\n      animationRef.current = null;\n    }\n    gsap.set(timerRectangleRef.current, { height: '0%' });\n\n    gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(leftCardRef.current, { duration: 0.8, x: '-150px', rotation: -10, scale: 1, opacity: 1 });\n    gsap.to(rightCardRef.current, { duration: 0.8, x: '150px', rotation: 10, scale: 1, opacity: 1 });\n  };\n\n  const startTimer = () => {\n    if (!remainingTime || remainingTime <= 0) {\n      setRemainingTime(duration); \n    }\n\n    clearInterval(intervalRef.current);\n    setIsStarted(true);\n    setIsPaused(false);\n\n    console.log(\"Timer started with duration:\", remainingTime);\n\n    if (animationRef.current) {\n      animationRef.current.resume(); \n    } else {\n      animationRef.current = gsap.to(timerRectangleRef.current, {\n        height: '100%',\n        duration: remainingTime,\n        ease: 'linear',\n        onComplete: () => {\n          console.log(\"Timer and animation complete.\");\n          setIsStarted(false);\n        },\n      }).play();\n    }\n\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          playSound();\n          console.log(\"Timer reached zero, interval cleared.\");\n          return 0;\n        }\n        console.log(\"Timer ticking:\", prevTime - 1);\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n\n  const resetAndStartTimer = () => {\n    console.log(\"Recommencer button clicked - resetting and starting timer\");\n\n    clearInterval(intervalRef.current);  \n    setRemainingTime(duration);  \n    setIsPaused(false);  \n    setIsStarted(true);  \n\n    if (animationRef.current) {\n        animationRef.current.kill();\n        animationRef.current = null;\n    }\n\n    gsap.set(timerRectangleRef.current, { height: '0%' });\n\n    animationRef.current = gsap.to(timerRectangleRef.current, {\n        height: '100%',\n        duration: duration,  \n        ease: 'linear',\n        onComplete: () => {\n            console.log(\"Timer and animation complete.\");\n            setIsStarted(false);  \n        }\n    });\n\n    intervalRef.current = setInterval(() => {\n        setRemainingTime(prevTime => {\n            if (prevTime <= 1) {\n                clearInterval(intervalRef.current);\n                setIsPaused(true);\n                setIsStarted(false);\n                playSound();\n                console.log(\"Timer reached zero, interval cleared.\");\n                return 0;\n            }\n            console.log(\"Timer ticking:\", prevTime - 1);\n            return prevTime - 1;\n        });\n    }, 1000);\n  };\n\n\nconst handleTimerButtonClick = () => {\n  if (!isStarted) {\n    startTimer();\n  } else if (isPaused) {\n    startTimer();\n  } else {\n    pauseTimer();\n  }\n};\n\nconst pauseTimer = () => {\n  setIsPaused(true);\n  clearInterval(intervalRef.current);\n  if (animationRef.current) {\n    animationRef.current.pause();\n  }\n};\n\nconst handleSkipClick = () => {\n  resetCards();\n};\n\n  const changeIntensity = () => {\n    setIntensity(prev => {\n      if (prev === 'low') return 'medium';\n      if (prev === 'medium') return 'high';\n      return 'low';\n    });\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  const playSound = () => {\n    const audio = new Audio(timerSound);\n    audio.play();\n  };\n\n  const handleModalAccept = () => {\n    setIntensity('medium');\n    setShowModal(false);\n    setDareCount(0);\n  };\n\n  const handleModalDecline = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Container intensity={intensity}>\n      <CardsContainer>\n        <AVCardWrapper\n          ref={leftCardRef}\n          side=\"left\"\n          handleCardClick={handleCardClick}\n          clickedCard={clickedCard}\n          randomText={randomText}\n          currentPlayer={currentPlayer}\n        />\n        <AVCardWrapper\n          ref={rightCardRef}\n          side=\"right\"\n          handleCardClick={handleCardClick}\n          clickedCard={clickedCard}\n          randomText={randomText}\n          currentPlayer={currentPlayer}\n        />\n      </CardsContainer>\n\n      <TimerRectangle ref={timerRectangleRef} />\n\n      <AVTimerAndButtons\n        clickedCard={clickedCard}\n        currentPlayer={currentPlayer}\n        intensity={intensity}\n        isStarted={isStarted}\n        isPaused={isPaused}\n        remainingTime={remainingTime}\n        showSkipButton={showSkipButton}\n        duration={duration}\n        handleTimerButtonClick={handleTimerButtonClick}\n        resetAndStartTimer={resetAndStartTimer}\n        handleSkipClick={handleSkipClick}\n        changeIntensity={changeIntensity}\n        formatTime={formatTime}\n      />\n\n      {showModal && (\n        <AVModal\n          title=\"Passer à Foreplay ?\"\n          message=\"Vous avez réalisé plusieurs challenges en Warm-Up. Voulez-vous passer à l'intensité Foreplay ?\"\n          onAccept={handleModalAccept}\n          onDecline={handleModalDecline}\n        />\n      )}\n\n      <GrainEffect />\n    </Container>\n  );\n};\n\nexport default ActionVerite;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}