{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/CardContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Créer le contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContext = /*#__PURE__*/createContext();\n\n// Fournir le contexte à l'application\nexport const CardProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedCard, setSelectedCard] = useState(null);\n  const selectCard = card => setSelectedCard(card);\n  const resetCard = () => setSelectedCard(null);\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: {\n      selectedCard,\n      selectCard,\n      resetCard\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook pour utiliser le contexte facilement\n_s(CardProvider, \"axKFp42fepc+pMvgIT6NP3Hz6vE=\");\n_c = CardProvider;\nexport const useCard = () => {\n  _s2();\n  return useContext(CardContext);\n};\n_s2(useCard, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CardContext","CardProvider","children","_s","selectedCard","setSelectedCard","selectCard","card","resetCard","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCard","_s2","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/CardContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Créer le contexte\nconst CardContext = createContext();\n\n// Fournir le contexte à l'application\nexport const CardProvider = ({ children }) => {\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const selectCard = (card) => setSelectedCard(card);\n  const resetCard = () => setSelectedCard(null);\n\n  return (\n    <CardContext.Provider value={{ selectedCard, selectCard, resetCard }}>\n      {children}\n    </CardContext.Provider>\n  );\n};\n\n// Hook pour utiliser le contexte facilement\nexport const useCard = () => useContext(CardContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMS,UAAU,GAAIC,IAAI,IAAKF,eAAe,CAACE,IAAI,CAAC;EAClD,MAAMC,SAAS,GAAGA,CAAA,KAAMH,eAAe,CAAC,IAAI,CAAC;EAE7C,oBACEN,OAAA,CAACC,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEN,YAAY;MAAEE,UAAU;MAAEE;IAAU,CAAE;IAAAN,QAAA,EAClEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAX,EAAA,CAbaF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAczB,OAAO,MAAMe,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrB,UAAU,CAACI,WAAW,CAAC;AAAA;AAACiB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}