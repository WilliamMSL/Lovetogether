{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/navbar/navbarright.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport Modal from '../Modal';\nimport { useCard } from '../CardContext'; // Importation du contexte pour les cartes\nimport { UserContext } from '../UserContext'; // Importation du contexte pour User\nimport { ReactComponent as XIcon } from '../../images/assets/icons/x-square.svg';\nimport { ReactComponent as SlidersIcon } from '../../images/assets/icons/sliders.svg';\nimport NavButton from './navbarbutton'; // Importation du nouveau bouton\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavbarRight = () => {\n  _s();\n  const [isModalOpen, setModalOpen] = useState(false);\n  const {\n    selectedCard,\n    resetCard\n  } = useCard(); // Accès au contexte pour réinitialiser l'état des cartes\n  const {\n    updateUserPreferences\n  } = useContext(UserContext); // Accès au contexte User\n\n  const openModal = () => {\n    setModalOpen(true); // Ouvre le modal\n  };\n  const closeModal = () => {\n    setModalOpen(false); // Ferme le modal\n  };\n  const handleSave = data => {\n    updateUserPreferences(data); // Met à jour le contexte utilisateur avec les nouvelles données\n    closeModal(); // Ferme le modal après la sauvegarde\n  };\n  const handleReturn = () => {\n    resetCard(); // Réinitialise l'état des cartes pour cacher la carte sélectionnée\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      position: 'absolute',\n      right: '48px',\n      top: '48px',\n      gap: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavButton, {\n      icon: /*#__PURE__*/_jsxDEV(SlidersIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, this),\n      label: \"Filtres\",\n      onClick: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), selectedCard && /*#__PURE__*/_jsxDEV(NavButton, {\n      icon: /*#__PURE__*/_jsxDEV(XIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }, this),\n      onClick: handleReturn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) // Affiche le bouton pour réinitialiser la carte si une carte est sélectionnée\n    , /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(NavbarRight, \"GSGWIsW5lq4pCJC/meNsNmd1qPs=\", false, function () {\n  return [useCard];\n});\n_c = NavbarRight;\nexport default NavbarRight;\nvar _c;\n$RefreshReg$(_c, \"NavbarRight\");","map":{"version":3,"names":["React","useState","useContext","Modal","useCard","UserContext","ReactComponent","XIcon","SlidersIcon","NavButton","jsxDEV","_jsxDEV","NavbarRight","_s","isModalOpen","setModalOpen","selectedCard","resetCard","updateUserPreferences","openModal","closeModal","handleSave","data","handleReturn","style","display","flexDirection","position","right","top","gap","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","label","onClick","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/navbar/navbarright.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport Modal from '../Modal';\nimport { useCard } from '../CardContext'; // Importation du contexte pour les cartes\nimport { UserContext } from '../UserContext'; // Importation du contexte pour User\nimport { ReactComponent as XIcon } from '../../images/assets/icons/x-square.svg';\nimport { ReactComponent as SlidersIcon } from '../../images/assets/icons/sliders.svg';\nimport NavButton from './navbarbutton'; // Importation du nouveau bouton\n\nconst NavbarRight = () => {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const { selectedCard, resetCard } = useCard(); // Accès au contexte pour réinitialiser l'état des cartes\n  const { updateUserPreferences } = useContext(UserContext); // Accès au contexte User\n\n  const openModal = () => {\n    setModalOpen(true); // Ouvre le modal\n  };\n\n  const closeModal = () => {\n    setModalOpen(false); // Ferme le modal\n  };\n\n  const handleSave = (data) => {\n    updateUserPreferences(data); // Met à jour le contexte utilisateur avec les nouvelles données\n    closeModal(); // Ferme le modal après la sauvegarde\n  };\n\n  const handleReturn = () => {\n    resetCard(); // Réinitialise l'état des cartes pour cacher la carte sélectionnée\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'row', position: 'absolute', right: '48px', top: '48px', gap: '10px' }}>\n      <NavButton icon={<SlidersIcon />} label=\"Filtres\" onClick={openModal} />\n      {selectedCard && (\n        <NavButton icon={<XIcon />} onClick={handleReturn} /> // Affiche le bouton pour réinitialiser la carte si une carte est sélectionnée\n      )}\n      <Modal \n        isOpen={isModalOpen} \n        onClose={closeModal} \n        onSave={handleSave} \n      />\n    </div>\n  );\n};\n\nexport default NavbarRight;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,UAAU;AAC5B,SAASC,OAAO,QAAQ,gBAAgB,CAAC,CAAC;AAC1C,SAASC,WAAW,QAAQ,gBAAgB,CAAC,CAAC;AAC9C,SAASC,cAAc,IAAIC,KAAK,QAAQ,wCAAwC;AAChF,SAASD,cAAc,IAAIE,WAAW,QAAQ,uCAAuC;AACrF,OAAOC,SAAS,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM;IAAEe,YAAY;IAAEC;EAAU,CAAC,GAAGb,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM;IAAEc;EAAsB,CAAC,GAAGhB,UAAU,CAACG,WAAW,CAAC,CAAC,CAAC;;EAE3D,MAAMc,SAAS,GAAGA,CAAA,KAAM;IACtBJ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBL,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMM,UAAU,GAAIC,IAAI,IAAK;IAC3BJ,qBAAqB,CAACI,IAAI,CAAC,CAAC,CAAC;IAC7BF,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzBN,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC;EAED,oBACEN,OAAA;IAAKa,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,KAAK;MAAEC,QAAQ,EAAE,UAAU;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnHpB,OAAA,CAACF,SAAS;MAACuB,IAAI,eAAErB,OAAA,CAACH,WAAW;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEnB;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvEpB,YAAY,iBACXL,OAAA,CAACF,SAAS;MAACuB,IAAI,eAAErB,OAAA,CAACJ,KAAK;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAACE,OAAO,EAAEf;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IACvD,eACDzB,OAAA,CAACR,KAAK;MACJoC,MAAM,EAAEzB,WAAY;MACpB0B,OAAO,EAAEpB,UAAW;MACpBqB,MAAM,EAAEpB;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnCID,WAAW;EAAA,QAEqBR,OAAO;AAAA;AAAAsC,EAAA,GAFvC9B,WAAW;AAqCjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}