{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nimport lowIntensityImage from '../images/logo-5.svg';\nimport mediumIntensityImage from '../images/whitelogo-10.svg';\nimport highIntensityImage from '../images/whitelogo-20.svg';\nimport GrainEffect from './GrainEffect';\nimport timerSound from '../sound/gong.mp3'; // Import the sound file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({\n  intensity\n}) => intensity === 'low' ? '#FBF8F1' : intensity === 'medium' ? '#D51C2C' : '#5A0C13'};\n  background-image: ${({\n  intensity\n}) => intensity === 'low' ? `url(${lowIntensityImage})` : intensity === 'medium' ? `url(${mediumIntensityImage})` : `url(${highIntensityImage})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 1;\n`;\n_c = Container;\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n_c2 = CardsContainer;\nconst CardWrapper = styled.div`\n  perspective: 1000px;\n  width: 392px;\n  height: 548px;\n  position: absolute;\n  cursor: pointer;\n  z-index: 5;\n`;\n_c3 = CardWrapper;\nconst Footer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  color: #000000;\n  margin-top: 20px;\n`;\n_c4 = Footer;\nconst CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n`;\n_c5 = CardInner;\nconst CardFace = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 16px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n`;\nconst CardFront = styled(CardFace)`\n  background-image: url(${props => props.image});\n`;\n_c6 = CardFront;\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n_c7 = Title;\nconst CardBack = styled(CardFace)`\n  background-color: white;\n  transform: rotateY(180deg);\n  display: flex;\n  flex-direction: column;\n  padding: 48px;\n  justify-content: space-between;\n`;\n_c8 = CardBack;\nconst CardText = styled.div`\n  color: #333;\n  font-family: Paragon;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n_c9 = CardText;\nconst ButtonContainer = styled.div`\n  position: absolute;\n  bottom: 48px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n  z-index: 5;\n  justify-content: center; /* Center the buttons horizontally */\n`;\n_c10 = ButtonContainer;\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  color: #000;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover:enabled {\n    background-color: #fff5f5;\n    color: #ff4500;\n    border-color: #ff4500;\n    box-shadow: 0 6px 12px rgba(255, 69, 0, 0.3);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n`;\n_c11 = Button;\nconst TimerButton = styled(Button)`\n  background-color: #ff4500;\n  color: white;\n\n  &:hover {\n    background-color: #ff5733;\n  }\n`;\n_c12 = TimerButton;\nconst SkipButton = styled(Button)`\n  background-color: #ff5733;\n  color: white;\n\n  &:hover {\n    background-color: #ff4500;\n  }\n`;\n_c13 = SkipButton;\nconst TimerRectangle = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: 0;\n  background-color: rgba(255, 69, 0, 0.5);\n  z-index: 2;\n`;\n_c14 = TimerRectangle;\nconst ActionVerite = () => {\n  _s();\n  const {\n    firstName1,\n    firstName2,\n    selectedToys\n  } = useContext(UserContext);\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const intervalRef = useRef(null);\n  const [showSkipButton, setShowSkipButton] = useState(false);\n  const timerRectangleRef = useRef(null);\n  const animationRef = useRef(null); // Reference to the GSAP animation\n\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n  const [currentPlayer, setCurrentPlayer] = useState(firstName1 || '');\n  const [intensity, setIntensity] = useState('low');\n  useEffect(() => {\n    console.log(\"ActionVerite - Loaded user data from context:\", {\n      firstName1,\n      firstName2,\n      selectedToys\n    });\n    setCurrentPlayer(firstName1 || '');\n  }, [firstName1, firstName2, selectedToys]);\n  useEffect(() => {\n    gsap.set(leftCardRef.current, {\n      x: '-150px',\n      rotation: -10\n    });\n    gsap.set(rightCardRef.current, {\n      x: '150px',\n      rotation: 10\n    });\n  }, [intensity]);\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const otherPlayer = player === firstName1 ? firstName2 : firstName1;\n      const toysParam = selectedToys !== null && selectedToys !== void 0 && selectedToys.length ? [...selectedToys, 'all'] : ['all'];\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: {\n          type: type,\n          player: mappedPlayer,\n          toys: toysParam.join(','),\n          intensity: intensity\n        }\n      });\n      if (response.data && response.data.template) {\n        let {\n          template,\n          duration\n        } = response.data;\n        setDuration(duration || null);\n        setRemainingTime(duration);\n\n        // Remove the first letter's capitalization in the text, keeping player names as is\n        template = template.charAt(0).toLowerCase() + template.slice(1);\n        template = template.replace('{Currentplayer}', player).replace('{AutrePlayer}', otherPlayer);\n        return template;\n      } else {\n        return 'No data available';\n      }\n    } catch (error) {\n      console.error('Error loading text:', error);\n      return 'Error loading text';\n    }\n  };\n  const handleCardClick = async card => {\n    if (clickedCard) return;\n    try {\n      let randomText = '';\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n      }\n      setRandomText(randomText);\n      setClickedCard(card);\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: -1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      }\n\n      // Show skip button if there is a duration\n      if (duration) {\n        setShowSkipButton(true);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null);\n    setRemainingTime(null);\n    setIsPaused(false);\n    setIsStarted(false);\n    setShowSkipButton(false);\n    clearInterval(intervalRef.current);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n\n    // Reset the timer rectangle\n    if (animationRef.current) {\n      animationRef.current.kill();\n      animationRef.current = null;\n    }\n    gsap.set(timerRectangleRef.current, {\n      height: '0%'\n    });\n    gsap.to(leftCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(rightCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(leftCardRef.current, {\n      duration: 0.8,\n      x: '-150px',\n      rotation: -10,\n      scale: 1,\n      opacity: 1\n    });\n    gsap.to(rightCardRef.current, {\n      duration: 0.8,\n      x: '150px',\n      rotation: 10,\n      scale: 1,\n      opacity: 1\n    });\n  };\n  const startTimer = () => {\n    if (!remainingTime) return;\n    clearInterval(intervalRef.current); // Clear any existing interval\n    setIsStarted(true);\n    setIsPaused(false);\n    console.log(\"Timer started with duration:\", remainingTime);\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          playSound(); // Play sound when timer reaches 0\n          console.log(\"Timer reached zero, interval cleared.\");\n          return 0;\n        }\n        console.log(\"Timer ticking:\", prevTime - 1);\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n  const resetAndStartTimer = () => {\n    console.log(\"Recommencer button clicked - resetting and starting timer\");\n    clearInterval(intervalRef.current); // Clear any existing interval\n    setRemainingTime(duration);\n    setIsPaused(false);\n    setIsStarted(false); // Ensure timer is reset\n\n    // Reset the timer rectangle and start the animation\n    if (animationRef.current) {\n      animationRef.current.kill();\n    }\n    gsap.set(timerRectangleRef.current, {\n      height: '0%'\n    });\n    animationRef.current = gsap.to(timerRectangleRef.current, {\n      height: '100%',\n      duration: duration,\n      ease: 'linear',\n      onStart: () => {\n        console.log(\"Rectangle animation started, timer will start.\");\n        startTimer(); // Start the timer interval when the animation starts\n      },\n      onComplete: () => {\n        console.log(\"Timer and animation complete.\");\n        setIsStarted(false); // Ensure no \"Pause\" button after completion\n      }\n    }).play(); // Play the rectangle animation\n  };\n  const handleTimerButtonClick = () => {\n    if (!isStarted) {\n      startTimer();\n    } else if (isPaused) {\n      startTimer();\n      if (animationRef.current) {\n        animationRef.current.resume(); // Resume the rectangle animation\n      }\n    } else {\n      pauseTimer();\n    }\n  };\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n    if (animationRef.current) {\n      animationRef.current.pause(); // Pause the rectangle animation\n    }\n  };\n  const handleSkipClick = () => {\n    resetCards();\n  };\n  const changeIntensity = () => {\n    setIntensity(prev => {\n      if (prev === 'low') return 'medium';\n      if (prev === 'medium') return 'high';\n      return 'low';\n    });\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n  const playSound = () => {\n    const audio = new Audio(timerSound);\n    audio.play();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    intensity: intensity,\n    children: [/*#__PURE__*/_jsxDEV(CardsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: leftCardRef,\n        onClick: () => handleCardClick('left'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/junebaby.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: clickedCard === 'left' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: rightCardRef,\n        onClick: () => handleCardClick('right'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/love.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: clickedCard === 'right' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerRectangle, {\n      ref: timerRectangleRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [!clickedCard && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: true,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Tour\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), \" \\xC0 ton tour, \", currentPlayer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: changeIntensity,\n          children: [\"Intensit\\xE9 \\uFF5C \", intensity === 'low' ? '👀  Warm-up' : intensity === 'medium' ? '🔥 Foreplay' : \"🔞  The Main Event\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), clickedCard && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetCards,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Tour\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), \" Joueur suivant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), isStarted && /*#__PURE__*/_jsxDEV(TimerButton, {\n          onClick: handleTimerButtonClick,\n          children: isPaused ? 'Reprendre' : `Pause (${formatTime(remainingTime)})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TimerButton, {\n          onClick: resetAndStartTimer,\n          children: \"Recommencer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this), showSkipButton && /*#__PURE__*/_jsxDEV(SkipButton, {\n          onClick: handleSkipClick,\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GrainEffect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionVerite, \"ddkc+XWEDw4v6yv3lI3feqSOx/Q=\");\n_c15 = ActionVerite;\nexport default ActionVerite;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CardsContainer\");\n$RefreshReg$(_c3, \"CardWrapper\");\n$RefreshReg$(_c4, \"Footer\");\n$RefreshReg$(_c5, \"CardInner\");\n$RefreshReg$(_c6, \"CardFront\");\n$RefreshReg$(_c7, \"Title\");\n$RefreshReg$(_c8, \"CardBack\");\n$RefreshReg$(_c9, \"CardText\");\n$RefreshReg$(_c10, \"ButtonContainer\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"TimerButton\");\n$RefreshReg$(_c13, \"SkipButton\");\n$RefreshReg$(_c14, \"TimerRectangle\");\n$RefreshReg$(_c15, \"ActionVerite\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useContext","styled","gsap","axios","UserContext","lowIntensityImage","mediumIntensityImage","highIntensityImage","GrainEffect","timerSound","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","intensity","_c","CardsContainer","_c2","CardWrapper","_c3","Footer","_c4","CardInner","_c5","CardFace","CardFront","props","image","_c6","Title","h1","_c7","CardBack","_c8","CardText","_c9","ButtonContainer","_c10","Button","button","_c11","TimerButton","_c12","SkipButton","_c13","TimerRectangle","_c14","ActionVerite","_s","firstName1","firstName2","selectedToys","clickedCard","setClickedCard","randomText","setRandomText","duration","setDuration","remainingTime","setRemainingTime","isPaused","setIsPaused","isStarted","setIsStarted","intervalRef","showSkipButton","setShowSkipButton","timerRectangleRef","animationRef","leftCardRef","rightCardRef","currentPlayer","setCurrentPlayer","setIntensity","console","log","set","current","x","rotation","fetchRandomActionOrTruth","type","player","mappedPlayer","otherPlayer","toysParam","length","response","get","params","toys","join","data","template","charAt","toLowerCase","slice","replace","error","handleCardClick","card","to","y","scale","opacity","setTimeout","querySelector","rotationY","resetCards","clearInterval","prevPlayer","kill","height","startTimer","setInterval","prevTime","playSound","resetAndStartTimer","ease","onStart","onComplete","play","handleTimerButtonClick","resume","pauseTimer","pause","handleSkipClick","changeIntensity","prev","formatTime","seconds","minutes","Math","floor","secs","audio","Audio","children","ref","onClick","className","require","fileName","_jsxFileName","lineNumber","columnNumber","disabled","role","_c15","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nimport lowIntensityImage from '../images/logo-5.svg';\nimport mediumIntensityImage from '../images/whitelogo-10.svg';\nimport highIntensityImage from '../images/whitelogo-20.svg';\nimport GrainEffect from './GrainEffect';\nimport timerSound from '../sound/gong.mp3'; // Import the sound file\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({ intensity }) => \n    intensity === 'low' ? '#FBF8F1' : \n    intensity === 'medium' ? '#D51C2C' : \n    '#5A0C13'};\n  background-image: ${({ intensity }) => \n    intensity === 'low' ? `url(${lowIntensityImage})` : \n    intensity === 'medium' ? `url(${mediumIntensityImage})` : \n    `url(${highIntensityImage})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 1;\n`;\n\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n\nconst CardWrapper = styled.div`\n  perspective: 1000px;\n  width: 392px;\n  height: 548px;\n  position: absolute;\n  cursor: pointer;\n  z-index: 5;\n`;\n\nconst Footer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  color: #000000;\n  margin-top: 20px;\n`;\n\nconst CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n`;\n\nconst CardFace = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 16px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst CardFront = styled(CardFace)`\n  background-image: url(${props => props.image});\n`;\n\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst CardBack = styled(CardFace)`\n  background-color: white;\n  transform: rotateY(180deg);\n  display: flex;\n  flex-direction: column;\n  padding: 48px;\n  justify-content: space-between;\n`;\n\nconst CardText = styled.div`\n  color: #333;\n  font-family: Paragon;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n\nconst ButtonContainer = styled.div`\n  position: absolute;\n  bottom: 48px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n  z-index: 5;\n  justify-content: center; /* Center the buttons horizontally */\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  color: #000;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover:enabled {\n    background-color: #fff5f5;\n    color: #ff4500;\n    border-color: #ff4500;\n    box-shadow: 0 6px 12px rgba(255, 69, 0, 0.3);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n`;\n\nconst TimerButton = styled(Button)`\n  background-color: #ff4500;\n  color: white;\n\n  &:hover {\n    background-color: #ff5733;\n  }\n`;\n\nconst SkipButton = styled(Button)`\n  background-color: #ff5733;\n  color: white;\n\n  &:hover {\n    background-color: #ff4500;\n  }\n`;\n\nconst TimerRectangle = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: 0;\n  background-color: rgba(255, 69, 0, 0.5);\n  z-index: 2;\n`;\n\nconst ActionVerite = () => {\n  const { firstName1, firstName2, selectedToys } = useContext(UserContext);\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const intervalRef = useRef(null);\n  const [showSkipButton, setShowSkipButton] = useState(false);\n  const timerRectangleRef = useRef(null);\n  const animationRef = useRef(null);  // Reference to the GSAP animation\n\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n\n  const [currentPlayer, setCurrentPlayer] = useState(firstName1 || '');\n  const [intensity, setIntensity] = useState('low');\n\n  useEffect(() => {\n    console.log(\"ActionVerite - Loaded user data from context:\", { firstName1, firstName2, selectedToys });\n    setCurrentPlayer(firstName1 || '');\n  }, [firstName1, firstName2, selectedToys]);\n\n  useEffect(() => {\n    gsap.set(leftCardRef.current, { x: '-150px', rotation: -10 });\n    gsap.set(rightCardRef.current, { x: '150px', rotation: 10 });\n  }, [intensity]);\n\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n        const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n        const otherPlayer = player === firstName1 ? firstName2 : firstName1;\n        const toysParam = selectedToys?.length ? [...selectedToys, 'all'] : ['all'];\n\n        const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n            params: { type: type, player: mappedPlayer, toys: toysParam.join(','), intensity: intensity }\n        });\n\n        if (response.data && response.data.template) {\n            let { template, duration } = response.data;\n            setDuration(duration || null);\n            setRemainingTime(duration);\n\n            // Remove the first letter's capitalization in the text, keeping player names as is\n            template = template.charAt(0).toLowerCase() + template.slice(1);\n\n            template = template.replace('{Currentplayer}', player)\n                               .replace('{AutrePlayer}', otherPlayer);\n\n            return template;\n        } else {\n            return 'No data available';\n        }\n    } catch (error) {\n        console.error('Error loading text:', error);\n        return 'Error loading text';\n    }\n  };\n\n  const handleCardClick = async (card) => {\n    if (clickedCard) return;\n\n    try {\n      let randomText = '';\n\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n      }\n\n      setRandomText(randomText);\n      setClickedCard(card);\n\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(leftCardRef.current, { duration: 0.8, x: -1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      }\n\n      // Show skip button if there is a duration\n      if (duration) {\n        setShowSkipButton(true);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null);\n    setRemainingTime(null);\n    setIsPaused(false);\n    setIsStarted(false);\n    setShowSkipButton(false);\n    clearInterval(intervalRef.current);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n\n    // Reset the timer rectangle\n    if (animationRef.current) {\n      animationRef.current.kill();\n      animationRef.current = null;\n    }\n    gsap.set(timerRectangleRef.current, { height: '0%' });\n\n    gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(leftCardRef.current, { duration: 0.8, x: '-150px', rotation: -10, scale: 1, opacity: 1 });\n    gsap.to(rightCardRef.current, { duration: 0.8, x: '150px', rotation: 10, scale: 1, opacity: 1 });\n  };\n\n  const startTimer = () => {\n    if (!remainingTime) return;\n\n    clearInterval(intervalRef.current); // Clear any existing interval\n    setIsStarted(true);\n    setIsPaused(false);\n\n    console.log(\"Timer started with duration:\", remainingTime);\n\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          playSound(); // Play sound when timer reaches 0\n          console.log(\"Timer reached zero, interval cleared.\");\n          return 0;\n        }\n        console.log(\"Timer ticking:\", prevTime - 1);\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n\n  const resetAndStartTimer = () => {\n    console.log(\"Recommencer button clicked - resetting and starting timer\");\n\n    clearInterval(intervalRef.current); // Clear any existing interval\n    setRemainingTime(duration);\n    setIsPaused(false);\n    setIsStarted(false); // Ensure timer is reset\n\n    // Reset the timer rectangle and start the animation\n    if (animationRef.current) {\n      animationRef.current.kill();\n    }\n\n    gsap.set(timerRectangleRef.current, { height: '0%' });\n\n    animationRef.current = gsap.to(timerRectangleRef.current, {\n      height: '100%',\n      duration: duration,\n      ease: 'linear',\n      onStart: () => {\n        console.log(\"Rectangle animation started, timer will start.\");\n        startTimer(); // Start the timer interval when the animation starts\n      },\n      onComplete: () => {\n        console.log(\"Timer and animation complete.\");\n        setIsStarted(false); // Ensure no \"Pause\" button after completion\n      }\n    }).play(); // Play the rectangle animation\n  };\n\n  const handleTimerButtonClick = () => {\n    if (!isStarted) {\n      startTimer();\n    } else if (isPaused) {\n      startTimer();\n      if (animationRef.current) {\n        animationRef.current.resume(); // Resume the rectangle animation\n      }\n    } else {\n      pauseTimer();\n    }\n  };\n\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n    if (animationRef.current) {\n      animationRef.current.pause(); // Pause the rectangle animation\n    }\n  };\n\n  const handleSkipClick = () => {\n    resetCards();\n  };\n\n  const changeIntensity = () => {\n    setIntensity(prev => {\n      if (prev === 'low') return 'medium';\n      if (prev === 'medium') return 'high';\n      return 'low';\n    });\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  const playSound = () => {\n    const audio = new Audio(timerSound);\n    audio.play();\n  };\n\n  return (\n    <Container intensity={intensity}>\n      <CardsContainer>\n        <CardWrapper\n          ref={leftCardRef}\n          onClick={() => handleCardClick('left')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/junebaby.png')} />\n            <CardBack>\n              <Title>Truth & Dare</Title>\n              <CardText>\n                {clickedCard === 'left' && randomText \n                  ? `${currentPlayer}, ${randomText}` \n                  : currentPlayer}\n              </CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n        <CardWrapper\n          ref={rightCardRef}\n          onClick={() => handleCardClick('right')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/love.png')} />\n            <CardBack>\n              <Title>Truth & Dare</Title>\n              <CardText>\n                {clickedCard === 'right' && randomText \n                  ? `${currentPlayer}, ${randomText}` \n                  : currentPlayer}\n              </CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n      </CardsContainer>\n\n      <TimerRectangle ref={timerRectangleRef} />\n\n      <ButtonContainer>\n        {!clickedCard && (\n          <>\n            <Button disabled>\n              <span role=\"img\" aria-label=\"Tour\">👤</span> À ton tour, {currentPlayer}\n            </Button>\n            <Button onClick={changeIntensity}>\n             Intensité ｜ {intensity === 'low' ? '👀  Warm-up' : intensity === 'medium' ? '🔥 Foreplay' : \"🔞  The Main Event\"}\n            </Button>\n          </>\n        )}\n        {clickedCard && (\n          <>\n            <Button onClick={resetCards}>\n              <span role=\"img\" aria-label=\"Tour\">👤</span> Joueur suivant\n            </Button>\n            {isStarted && (\n              <TimerButton onClick={handleTimerButtonClick}>\n                {isPaused ? 'Reprendre' : `Pause (${formatTime(remainingTime)})`}\n              </TimerButton>\n            )}\n            <TimerButton onClick={resetAndStartTimer}>\n              Recommencer\n            </TimerButton>\n            {showSkipButton && (\n              <SkipButton onClick={handleSkipClick}>\n                Skip\n              </SkipButton>\n            )}\n          </>\n        )}\n      </ButtonContainer>\n      \n      <GrainEffect />\n    </Container>\n  );\n};\n\nexport default ActionVerite;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACtE,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,IAAI,QAAQ,MAAM;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,OAAOC,oBAAoB,MAAM,4BAA4B;AAC7D,OAAOC,kBAAkB,MAAM,4BAA4B;AAC3D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,SAAS,GAAGb,MAAM,CAACc,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,CAAC;EAAEC;AAAU,CAAC,KAChCA,SAAS,KAAK,KAAK,GAAG,SAAS,GAC/BA,SAAS,KAAK,QAAQ,GAAG,SAAS,GAClC,SAAS;AACb,sBAAsB,CAAC;EAAEA;AAAU,CAAC,KAChCA,SAAS,KAAK,KAAK,GAAG,OAAOX,iBAAiB,GAAG,GACjDW,SAAS,KAAK,QAAQ,GAAG,OAAOV,oBAAoB,GAAG,GACvD,OAAOC,kBAAkB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,EAAA,GArBIH,SAAS;AAuBf,MAAMI,cAAc,GAAGjB,MAAM,CAACc,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACI,GAAA,GARID,cAAc;AAUpB,MAAME,WAAW,GAAGnB,MAAM,CAACc,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAPID,WAAW;AASjB,MAAME,MAAM,GAAGrB,MAAM,CAACc,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GAPID,MAAM;AASZ,MAAME,SAAS,GAAGvB,MAAM,CAACc,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GANID,SAAS;AAQf,MAAME,QAAQ,GAAGzB,MAAM,CAACc,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMY,SAAS,GAAG1B,MAAM,CAACyB,QAAQ,CAAC;AAClC,0BAA0BE,KAAK,IAAIA,KAAK,CAACC,KAAK;AAC9C,CAAC;AAACC,GAAA,GAFIH,SAAS;AAIf,MAAMI,KAAK,GAAG9B,MAAM,CAAC+B,EAAE;AACvB;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,KAAK;AAOX,MAAMG,QAAQ,GAAGjC,MAAM,CAACyB,QAAQ,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GAPID,QAAQ;AASd,MAAME,QAAQ,GAAGnC,MAAM,CAACc,GAAG;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACsB,GAAA,GALID,QAAQ;AAOd,MAAME,eAAe,GAAGrC,MAAM,CAACc,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACwB,IAAA,GARID,eAAe;AAUrB,MAAME,MAAM,GAAGvC,MAAM,CAACwC,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GA3BIF,MAAM;AA6BZ,MAAMG,WAAW,GAAG1C,MAAM,CAACuC,MAAM,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACI,IAAA,GAPID,WAAW;AASjB,MAAME,UAAU,GAAG5C,MAAM,CAACuC,MAAM,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,IAAA,GAPID,UAAU;AAShB,MAAME,cAAc,GAAG9C,MAAM,CAACc,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiC,IAAA,GAPID,cAAc;AASpB,MAAME,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}