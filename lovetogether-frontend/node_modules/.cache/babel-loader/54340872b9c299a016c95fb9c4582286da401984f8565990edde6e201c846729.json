{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\n// ... autres imports restent inchangés\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const {\n    firstName1,\n    firstName2,\n    selectedToys,\n    updateUserPreferences\n  } = useContext(UserContext);\n  const [toysByCategory, setToysByCategory] = useState({});\n  const [tempFormState, setTempFormState] = useState(() => ({\n    firstName1: firstName1 || '',\n    firstName2: firstName2 || '',\n    selectedToys: selectedToys || [],\n    selectedCategories: [],\n    // Nous allons remplir cela une fois que nous aurons les catégories\n    toysByCategoryState: {}\n  }));\n  useEffect(() => {\n    const fetchToys = async () => {\n      try {\n        const response = await fetch('http://localhost:1812/api/toys');\n        const toys = await response.json();\n        const groupedToys = toys.reduce((acc, toy) => {\n          const category = toy.category || 'Uncategorized';\n          if (!acc[category]) {\n            acc[category] = [];\n          }\n          acc[category].push(toy);\n          return acc;\n        }, {});\n        setToysByCategory(groupedToys);\n\n        // Mettre à jour tempFormState avec toutes les catégories sélectionnées\n        setTempFormState(prev => ({\n          ...prev,\n          selectedCategories: Object.keys(groupedToys),\n          toysByCategoryState: Object.keys(groupedToys).reduce((acc, category) => {\n            acc[category] = groupedToys[category].map(toy => toy.name_id);\n            return acc;\n          }, {}),\n          selectedToys: groupedToys.flatMap(category => category.map(toy => toy.name_id))\n        }));\n      } catch (error) {\n        console.error('Error fetching toys:', error);\n      }\n    };\n    fetchToys();\n  }, []);\n\n  // ... le reste du code reste inchangé\n\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: /*#__PURE__*/_jsxDEV(ChipsContainer, {\n        children: Object.keys(toysByCategory).map((category, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CategoryChip, {\n            isSelected: tempFormState.selectedCategories.includes(category),\n            onClick: () => toggleCategorySelection(category),\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), tempFormState.selectedCategories.includes(category) && toysByCategory[category].map((toy, toyIndex) => /*#__PURE__*/_jsxDEV(ToyChip, {\n            isSelected: tempFormState.selectedToys.includes(toy.name_id),\n            onClick: () => toggleToySelection(toy.name_id),\n            children: [toy.name, tempFormState.selectedToys.includes(toy.name_id) ? /*#__PURE__*/_jsxDEV(MinusIcon, {\n              style: {\n                width: '16px',\n                height: '16px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(PlusIcon, {\n              style: {\n                width: '16px',\n                height: '16px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 23\n            }, this)]\n          }, `toy-${index}-${toyIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"eRAL8O5YNiDQSvYJpavA11G2J8w=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useEffect","useState","useContext","jsxDEV","_jsxDEV","Modal","isOpen","onClose","onSave","_s","firstName1","firstName2","selectedToys","updateUserPreferences","UserContext","toysByCategory","setToysByCategory","tempFormState","setTempFormState","selectedCategories","toysByCategoryState","fetchToys","response","fetch","toys","json","groupedToys","reduce","acc","toy","category","push","prev","Object","keys","map","name_id","flatMap","error","console","ModalOverlay","children","ModalContent","ChipsContainer","index","Fragment","CategoryChip","isSelected","includes","onClick","toggleCategorySelection","fileName","_jsxFileName","lineNumber","columnNumber","toyIndex","ToyChip","toggleToySelection","name","MinusIcon","style","width","height","PlusIcon","_c","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/Modal.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\n// ... autres imports restent inchangés\n\nconst Modal = ({ isOpen, onClose, onSave }) => {\n  const { firstName1, firstName2, selectedToys, updateUserPreferences } = useContext(UserContext);\n\n  const [toysByCategory, setToysByCategory] = useState({});\n\n  const [tempFormState, setTempFormState] = useState(() => ({\n    firstName1: firstName1 || '',\n    firstName2: firstName2 || '',\n    selectedToys: selectedToys || [],\n    selectedCategories: [], // Nous allons remplir cela une fois que nous aurons les catégories\n    toysByCategoryState: {},\n  }));\n\n  useEffect(() => {\n    const fetchToys = async () => {\n      try {\n        const response = await fetch('http://localhost:1812/api/toys');\n        const toys = await response.json();\n\n        const groupedToys = toys.reduce((acc, toy) => {\n          const category = toy.category || 'Uncategorized';\n          if (!acc[category]) {\n            acc[category] = [];\n          }\n          acc[category].push(toy);\n          return acc;\n        }, {});\n\n        setToysByCategory(groupedToys);\n\n        // Mettre à jour tempFormState avec toutes les catégories sélectionnées\n        setTempFormState(prev => ({\n          ...prev,\n          selectedCategories: Object.keys(groupedToys),\n          toysByCategoryState: Object.keys(groupedToys).reduce((acc, category) => {\n            acc[category] = groupedToys[category].map(toy => toy.name_id);\n            return acc;\n          }, {}),\n          selectedToys: groupedToys.flatMap(category => category.map(toy => toy.name_id))\n        }));\n\n      } catch (error) {\n        console.error('Error fetching toys:', error);\n      }\n    };\n\n    fetchToys();\n  }, []);\n\n  // ... le reste du code reste inchangé\n\n  return (\n    <ModalOverlay>\n      <ModalContent>\n        {/* ... le reste du JSX reste inchangé */}\n        <ChipsContainer>\n          {Object.keys(toysByCategory).map((category, index) => (\n            <React.Fragment key={index}>\n              <CategoryChip\n                isSelected={tempFormState.selectedCategories.includes(category)}\n                onClick={() => toggleCategorySelection(category)}\n              >\n                {category}\n              </CategoryChip>\n\n              {tempFormState.selectedCategories.includes(category) &&\n                toysByCategory[category].map((toy, toyIndex) => (\n                  <ToyChip\n                    key={`toy-${index}-${toyIndex}`}\n                    isSelected={tempFormState.selectedToys.includes(toy.name_id)}\n                    onClick={() => toggleToySelection(toy.name_id)}\n                  >\n                    {toy.name}\n                    {tempFormState.selectedToys.includes(toy.name_id) ? (\n                      <MinusIcon style={{ width: '16px', height: '16px' }} />\n                    ) : (\n                      <PlusIcon style={{ width: '16px', height: '16px' }} />\n                    )}\n                  </ToyChip>\n                ))}\n            </React.Fragment>\n          ))}\n        </ChipsContainer>\n        {/* ... le reste du JSX reste inchangé */}\n      </ModalContent>\n    </ModalOverlay>\n  );\n};\n\nexport default Modal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}