{"ast":null,"code":"import React,{useContext,useState}from'react';import Button from'./navitem';import{ReactComponent as KeyIcon}from'../../images/assets/icons/key.svg';import{ReactComponent as CompassIcon}from'../../images/assets/icons/compass.svg';import{ReactComponent as AwardIcon}from'../../images/assets/icons/award.svg';import{useCard}from'../CardContext';import{UserContext}from'../UserContext';// Importation du contexte utilisateur\nimport Modal from'../Modal';// Importation du composant modal\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NavbarLeft=()=>{const{selectCard}=useCard();// Utilisation du contexte des cartes\nconst{firstName1,firstName2,updateUserPreferences}=useContext(UserContext);// Accès aux données utilisateur\nconst[isModalOpen,setModalOpen]=useState(false);// État local pour contrôler la visibilité du modal\nconst handleActionClick=()=>{if(!firstName1||!firstName2){setModalOpen(true);// Ouvre le modal si les noms ne sont pas définis\n}else{selectCard('ActionVerite');// Sélectionne la carte 'ActionVerite' si les noms sont définis\n}};const closeModal=()=>{setModalOpen(false);// Ferme le modal\n};const handleSave=data=>{console.log('Saving data from modal:',data);updateUserPreferences(data);// Mise à jour des préférences utilisateur\ncloseModal();// Ferme le modal après enregistrement\nselectCard('ActionVerite');// Sélection automatique de la carte 'ActionVerite'\n};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',position:'absolute',left:'48px',top:'48px',gap:'10px'},children:[/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(KeyIcon,{}),label:\"Truth & Dare\",onClick:handleActionClick}),/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(CompassIcon,{}),label:\"Positions\",onClick:()=>selectCard('Generator')}),\" \",/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(AwardIcon,{}),label:\"R\\xF4le\",onClick:()=>selectCard('Roleplay')}),\" \",/*#__PURE__*/_jsx(Modal,{isOpen:isModalOpen,onClose:closeModal,onSave:handleSave})]});};export default NavbarLeft;","map":{"version":3,"names":["React","useContext","useState","Button","ReactComponent","KeyIcon","CompassIcon","AwardIcon","useCard","UserContext","Modal","jsx","_jsx","jsxs","_jsxs","NavbarLeft","selectCard","firstName1","firstName2","updateUserPreferences","isModalOpen","setModalOpen","handleActionClick","closeModal","handleSave","data","console","log","style","display","flexDirection","position","left","top","gap","children","icon","label","onClick","isOpen","onClose","onSave"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/navbar/navbarlist.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport Button from './navitem';\nimport { ReactComponent as KeyIcon } from '../../images/assets/icons/key.svg';\nimport { ReactComponent as CompassIcon } from '../../images/assets/icons/compass.svg';\nimport { ReactComponent as AwardIcon } from '../../images/assets/icons/award.svg';\nimport { useCard } from '../CardContext';\nimport { UserContext } from '../UserContext'; // Importation du contexte utilisateur\nimport Modal from '../Modal'; // Importation du composant modal\n\nconst NavbarLeft = () => {\n  const { selectCard } = useCard(); // Utilisation du contexte des cartes\n  const { firstName1, firstName2, updateUserPreferences } = useContext(UserContext); // Accès aux données utilisateur\n  const [isModalOpen, setModalOpen] = useState(false); // État local pour contrôler la visibilité du modal\n\n  const handleActionClick = () => {\n    if (!firstName1 || !firstName2) {\n      setModalOpen(true); // Ouvre le modal si les noms ne sont pas définis\n    } else {\n      selectCard('ActionVerite'); // Sélectionne la carte 'ActionVerite' si les noms sont définis\n    }\n  };\n\n  const closeModal = () => {\n    setModalOpen(false); // Ferme le modal\n  };\n\n  const handleSave = (data) => {\n    console.log('Saving data from modal:', data);\n    updateUserPreferences(data); // Mise à jour des préférences utilisateur\n    closeModal(); // Ferme le modal après enregistrement\n    selectCard('ActionVerite'); // Sélection automatique de la carte 'ActionVerite'\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', position: 'absolute', left: '48px', top: '48px', gap: '10px' }}>\n      <Button icon={<KeyIcon />} label=\"Truth & Dare\" onClick={handleActionClick} />\n      <Button icon={<CompassIcon />} label=\"Positions\" onClick={() => selectCard('Generator')} /> {/* Sélectionne 'Generator' */}\n      <Button icon={<AwardIcon />} label=\"Rôle\" onClick={() => selectCard('Roleplay')} /> {/* Sélectionne 'Roleplay' */}\n      \n      {/* Composant Modal */}\n      <Modal isOpen={isModalOpen} onClose={closeModal} onSave={handleSave} />\n    </div>\n  );\n};\n\nexport default NavbarLeft;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CACnD,MAAO,CAAAC,MAAM,KAAM,WAAW,CAC9B,OAASC,cAAc,GAAI,CAAAC,OAAO,KAAQ,mCAAmC,CAC7E,OAASD,cAAc,GAAI,CAAAE,WAAW,KAAQ,uCAAuC,CACrF,OAASF,cAAc,GAAI,CAAAG,SAAS,KAAQ,qCAAqC,CACjF,OAASC,OAAO,KAAQ,gBAAgB,CACxC,OAASC,WAAW,KAAQ,gBAAgB,CAAE;AAC9C,MAAO,CAAAC,KAAK,KAAM,UAAU,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEC,UAAW,CAAC,CAAGR,OAAO,CAAC,CAAC,CAAE;AAClC,KAAM,CAAES,UAAU,CAAEC,UAAU,CAAEC,qBAAsB,CAAC,CAAGlB,UAAU,CAACQ,WAAW,CAAC,CAAE;AACnF,KAAM,CAACW,WAAW,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAE;AAErD,KAAM,CAAAoB,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAI,CAACL,UAAU,EAAI,CAACC,UAAU,CAAE,CAC9BG,YAAY,CAAC,IAAI,CAAC,CAAE;AACtB,CAAC,IAAM,CACLL,UAAU,CAAC,cAAc,CAAC,CAAE;AAC9B,CACF,CAAC,CAED,KAAM,CAAAO,UAAU,CAAGA,CAAA,GAAM,CACvBF,YAAY,CAAC,KAAK,CAAC,CAAE;AACvB,CAAC,CAED,KAAM,CAAAG,UAAU,CAAIC,IAAI,EAAK,CAC3BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEF,IAAI,CAAC,CAC5CN,qBAAqB,CAACM,IAAI,CAAC,CAAE;AAC7BF,UAAU,CAAC,CAAC,CAAE;AACdP,UAAU,CAAC,cAAc,CAAC,CAAE;AAC9B,CAAC,CAED,mBACEF,KAAA,QAAKc,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,aAAa,CAAE,QAAQ,CAAEC,QAAQ,CAAE,UAAU,CAAEC,IAAI,CAAE,MAAM,CAAEC,GAAG,CAAE,MAAM,CAAEC,GAAG,CAAE,MAAO,CAAE,CAAAC,QAAA,eACrHvB,IAAA,CAACT,MAAM,EAACiC,IAAI,cAAExB,IAAA,CAACP,OAAO,GAAE,CAAE,CAACgC,KAAK,CAAC,cAAc,CAACC,OAAO,CAAEhB,iBAAkB,CAAE,CAAC,cAC9EV,IAAA,CAACT,MAAM,EAACiC,IAAI,cAAExB,IAAA,CAACN,WAAW,GAAE,CAAE,CAAC+B,KAAK,CAAC,WAAW,CAACC,OAAO,CAAEA,CAAA,GAAMtB,UAAU,CAAC,WAAW,CAAE,CAAE,CAAC,IAAC,cAC5FJ,IAAA,CAACT,MAAM,EAACiC,IAAI,cAAExB,IAAA,CAACL,SAAS,GAAE,CAAE,CAAC8B,KAAK,CAAC,SAAM,CAACC,OAAO,CAAEA,CAAA,GAAMtB,UAAU,CAAC,UAAU,CAAE,CAAE,CAAC,IAAC,cAGpFJ,IAAA,CAACF,KAAK,EAAC6B,MAAM,CAAEnB,WAAY,CAACoB,OAAO,CAAEjB,UAAW,CAACkB,MAAM,CAAEjB,UAAW,CAAE,CAAC,EACpE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}