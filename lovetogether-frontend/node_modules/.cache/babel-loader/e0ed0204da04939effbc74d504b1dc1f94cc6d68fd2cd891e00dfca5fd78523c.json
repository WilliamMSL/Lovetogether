{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport lowIntensityImage from '../images/logo.svg';\nimport mediumIntensityImage from '../images/logo.svg';\nimport highIntensityImage from '../images/logo.svg';\nimport GrainEffect from './GrainEffect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({\n  intensity\n}) => intensity === 'low' ? '#d4f1f4' : intensity === 'medium' ? '#ffd166' : '#ef476f'};\n  background-image: ${({\n  intensity\n}) => intensity === 'low' ? `url(${lowIntensityImage})` : intensity === 'medium' ? `url(${mediumIntensityImage})` : `url(${highIntensityImage})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n`;\n_c = Container;\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = CardsContainer;\nconst CardWrapper = styled.div`\n  perspective: 1000px;\n  width: 392px;\n  height: 548px;\n  position: absolute;\n  cursor: pointer;\n`;\n_c3 = CardWrapper;\nconst Footer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  color: #000000;\n  margin-top: 20px;\n`;\n_c4 = Footer;\nconst CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n`;\n_c5 = CardInner;\nconst CardFace = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 16px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n`;\nconst CardFront = styled(CardFace)`\n  background-image: url(${props => props.image});\n`;\n_c6 = CardFront;\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n_c7 = Title;\nconst CardBack = styled(CardFace)`\n  background-color: white;\n  transform: rotateY(180deg);\n  display:flex;\n  flex-direction:column;\n  padding: 48px;\n  justify-content: space-between;\n`;\n_c8 = CardBack;\nconst CardText = styled.div`\n  color: #333;\n  font-family: Paragon;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n_c9 = CardText;\nconst ButtonContainer = styled.div`\n  position:absolute;\n  bottom : 48px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n_c10 = ButtonContainer;\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  color: #000;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    background-color: #fff5f5;\n    color: #ff4500;\n    border-color: #ff4500;\n    box-shadow: 0 6px 12px rgba(255, 69, 0, 0.3);\n  }\n`;\n_c11 = Button;\nconst ActionVerite = () => {\n  _s();\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [selectedToys, setSelectedToys] = useState([]);\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n  const [currentPlayer, setCurrentPlayer] = useState('');\n  const [firstName1, setFirstName1] = useState('');\n  const [firstName2, setFirstName2] = useState('');\n  useEffect(() => {\n    const savedPreferences = localStorage.getItem('userPreferences');\n    if (savedPreferences) {\n      const {\n        firstName1,\n        firstName2,\n        selectedToys\n      } = JSON.parse(savedPreferences);\n      console.log('Preferences loaded from localStorage:', {\n        firstName1,\n        firstName2,\n        selectedToys\n      });\n      setFirstName1(firstName1 || '');\n      setFirstName2(firstName2 || '');\n      setSelectedToys(selectedToys || []);\n      setCurrentPlayer(firstName1 || '');\n    }\n  }, []);\n  const [intensity, setIntensity] = useState('low'); // 'low', 'medium', 'high'\n\n  const changeIntensity = () => {\n    setIntensity(prevIntensity => {\n      let newIntensity;\n      if (prevIntensity === 'low') {\n        newIntensity = 'medium';\n      } else if (prevIntensity === 'medium') {\n        newIntensity = 'high';\n      } else {\n        newIntensity = 'low';\n      }\n      console.log(`Intensity changed from ${prevIntensity} to ${newIntensity}`);\n      return newIntensity;\n    });\n  };\n  useEffect(() => {\n    gsap.set(leftCardRef.current, {\n      x: '-150px',\n      rotation: -10\n    });\n    gsap.set(rightCardRef.current, {\n      x: '150px',\n      rotation: 10\n    });\n    console.log(`Background updated to ${intensity} intensity`);\n  }, [intensity]); // Ajoutez un effet qui dépend de l'intensité\n\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const toysParam = selectedToys !== null && selectedToys !== void 0 && selectedToys.length ? [...selectedToys, 'all'] : ['all'];\n      console.log('Fetching with type:', type, 'toys:', toysParam.join(','), 'player:', mappedPlayer, 'intensity:', intensity);\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: {\n          type: type,\n          player: mappedPlayer,\n          toys: toysParam.join(','),\n          intensity: intensity\n        }\n      });\n      console.log('Raw API response:', response);\n      console.log('API response data:', response.data);\n      if (response.data && response.data.template) {\n        return response.data.template;\n      } else {\n        console.error('Invalid response format:', response.data);\n        return 'No data available';\n      }\n    } catch (error) {\n      console.error(`Error fetching random ${type}:`, error);\n      return 'Error loading text';\n    }\n  };\n  const handleCardClick = async card => {\n    if (clickedCard) return;\n    try {\n      setClickedCard(card);\n      let randomText = '';\n      console.log(`Current player: ${currentPlayer}`);\n      console.log(`firstName1 = ${firstName1}`);\n      console.log(`firstName2 = ${firstName2}`);\n      console.log(`Selected toys:`, selectedToys); // Log for the selected toys\n\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n      }\n\n      // Convert the text to lowercase except for the player's name\n      const playerText = `${currentPlayer}, ${randomText}`;\n      const lowerCasedText = playerText.slice(currentPlayer.length + 2).toLowerCase(); // Slice to get the text after the player's name\n      setRandomText(`${lowerCasedText}`);\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: -1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n  const resetCards = () => {\n    setClickedCard(null);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    gsap.to(leftCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(rightCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(leftCardRef.current, {\n      duration: 0.8,\n      x: '-150px',\n      rotation: -10,\n      scale: 1,\n      opacity: 1\n    });\n    gsap.to(rightCardRef.current, {\n      duration: 0.8,\n      x: '150px',\n      rotation: 10,\n      scale: 1,\n      opacity: 1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    intensity: intensity,\n    children: [/*#__PURE__*/_jsxDEV(GrainEffect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: leftCardRef,\n        onClick: () => handleCardClick('left'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/junebaby.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: [currentPlayer, \", \", clickedCard === 'left' && randomText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: rightCardRef,\n        onClick: () => handleCardClick('right'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/love.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: [currentPlayer, \", \", clickedCard === 'right' && randomText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: resetCards,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"Tour\",\n          children: \"\\uD83D\\uDC64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), \" Joueur suivant\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          console.log('Intensity button clicked');\n          changeIntensity();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"Tour\",\n          children: \"\\uD83D\\uDC64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), intensity.charAt(0).toUpperCase() + intensity.slice(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionVerite, \"8YVNWoTAcKpOhaNJjFQFqpHXFPY=\");\n_c12 = ActionVerite;\nexport default ActionVerite;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CardsContainer\");\n$RefreshReg$(_c3, \"CardWrapper\");\n$RefreshReg$(_c4, \"Footer\");\n$RefreshReg$(_c5, \"CardInner\");\n$RefreshReg$(_c6, \"CardFront\");\n$RefreshReg$(_c7, \"Title\");\n$RefreshReg$(_c8, \"CardBack\");\n$RefreshReg$(_c9, \"CardText\");\n$RefreshReg$(_c10, \"ButtonContainer\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"ActionVerite\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styled","gsap","axios","lowIntensityImage","mediumIntensityImage","highIntensityImage","GrainEffect","jsxDEV","_jsxDEV","Container","div","intensity","_c","CardsContainer","_c2","CardWrapper","_c3","Footer","_c4","CardInner","_c5","CardFace","CardFront","props","image","_c6","Title","h1","_c7","CardBack","_c8","CardText","_c9","ButtonContainer","_c10","Button","button","_c11","ActionVerite","_s","clickedCard","setClickedCard","randomText","setRandomText","selectedToys","setSelectedToys","leftCardRef","rightCardRef","currentPlayer","setCurrentPlayer","firstName1","setFirstName1","firstName2","setFirstName2","savedPreferences","localStorage","getItem","JSON","parse","console","log","setIntensity","changeIntensity","prevIntensity","newIntensity","set","current","x","rotation","fetchRandomActionOrTruth","type","player","mappedPlayer","toysParam","length","join","response","get","params","toys","data","template","error","handleCardClick","card","playerText","lowerCasedText","slice","toLowerCase","to","duration","y","scale","opacity","setTimeout","querySelector","rotationY","resetCards","prevPlayer","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","className","require","role","charAt","toUpperCase","_c12","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport lowIntensityImage from '../images/logo.svg';\nimport mediumIntensityImage from '../images/logo.svg';\nimport highIntensityImage from '../images/logo.svg';\nimport GrainEffect from './GrainEffect';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({ intensity }) => \n    intensity === 'low' ? '#d4f1f4' : \n    intensity === 'medium' ? '#ffd166' : \n    '#ef476f'};\n  background-image: ${({ intensity }) => \n    intensity === 'low' ? `url(${lowIntensityImage})` : \n    intensity === 'medium' ? `url(${mediumIntensityImage})` : \n    `url(${highIntensityImage})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n`;\n\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CardWrapper = styled.div`\n  perspective: 1000px;\n  width: 392px;\n  height: 548px;\n  position: absolute;\n  cursor: pointer;\n`;\n\nconst Footer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  color: #000000;\n  margin-top: 20px;\n`;\n\nconst CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n`;\n\nconst CardFace = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 16px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst CardFront = styled(CardFace)`\n  background-image: url(${props => props.image});\n`;\n\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst CardBack = styled(CardFace)`\n  background-color: white;\n  transform: rotateY(180deg);\n  display:flex;\n  flex-direction:column;\n  padding: 48px;\n  justify-content: space-between;\n`;\n\nconst CardText = styled.div`\n  color: #333;\n  font-family: Paragon;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n\nconst ButtonContainer = styled.div`\n  position:absolute;\n  bottom : 48px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  color: #000;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    background-color: #fff5f5;\n    color: #ff4500;\n    border-color: #ff4500;\n    box-shadow: 0 6px 12px rgba(255, 69, 0, 0.3);\n  }\n`;\n\nconst ActionVerite = () => {\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [selectedToys, setSelectedToys] = useState([]);\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n  \n  const [currentPlayer, setCurrentPlayer] = useState('');\n  const [firstName1, setFirstName1] = useState('');\n  const [firstName2, setFirstName2] = useState('');\n\n  useEffect(() => {\n    const savedPreferences = localStorage.getItem('userPreferences');\n    if (savedPreferences) {\n      const { firstName1, firstName2, selectedToys } = JSON.parse(savedPreferences);\n      console.log('Preferences loaded from localStorage:', { firstName1, firstName2, selectedToys });\n      setFirstName1(firstName1 || '');\n      setFirstName2(firstName2 || '');\n      setSelectedToys(selectedToys || []);\n      setCurrentPlayer(firstName1 || '');\n    }\n  }, []);\n\n  const [intensity, setIntensity] = useState('low'); // 'low', 'medium', 'high'\n\n  const changeIntensity = () => {\n    setIntensity(prevIntensity => {\n      let newIntensity;\n      if (prevIntensity === 'low') {\n        newIntensity = 'medium';\n      } else if (prevIntensity === 'medium') {\n        newIntensity = 'high';\n      } else {\n        newIntensity = 'low';\n      }\n  \n      console.log(`Intensity changed from ${prevIntensity} to ${newIntensity}`);\n      return newIntensity;\n    });\n  };\n\n  useEffect(() => {\n    gsap.set(leftCardRef.current, { x: '-150px', rotation: -10 });\n    gsap.set(rightCardRef.current, { x: '150px', rotation: 10 });\n    console.log(`Background updated to ${intensity} intensity`);\n  }, [intensity]); // Ajoutez un effet qui dépend de l'intensité\n\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const toysParam = selectedToys?.length ? [...selectedToys, 'all'] : ['all'];\n      console.log('Fetching with type:', type, 'toys:', toysParam.join(','), 'player:', mappedPlayer, 'intensity:', intensity);\n  \n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: { type: type, player: mappedPlayer, toys: toysParam.join(','), intensity: intensity }\n      });\n  \n      console.log('Raw API response:', response);\n      console.log('API response data:', response.data);\n  \n      if (response.data && response.data.template) {\n        return response.data.template;\n      } else {\n        console.error('Invalid response format:', response.data);\n        return 'No data available';\n      }\n    } catch (error) {\n      console.error(`Error fetching random ${type}:`, error);\n      return 'Error loading text';\n    }\n  };\n\n  const handleCardClick = async (card) => {\n    if (clickedCard) return;\n  \n    try {\n      setClickedCard(card);\n      let randomText = '';\n  \n      console.log(`Current player: ${currentPlayer}`);\n      console.log(`firstName1 = ${firstName1}`);\n      console.log(`firstName2 = ${firstName2}`);\n      console.log(`Selected toys:`, selectedToys); // Log for the selected toys\n  \n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n      }\n  \n      // Convert the text to lowercase except for the player's name\n      const playerText = `${currentPlayer}, ${randomText}`;\n      const lowerCasedText = playerText.slice(currentPlayer.length + 2).toLowerCase(); // Slice to get the text after the player's name\n      setRandomText(`${lowerCasedText}`);\n\n      if (card === 'left') {\n          gsap.to(leftCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n          gsap.to(rightCardRef.current, { duration: 0.8, x: 1000, opacity: 0 });\n          setTimeout(() => {\n              gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 180 });\n          }, 500);\n      } else {\n          gsap.to(rightCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n          gsap.to(leftCardRef.current, { duration: 0.8, x: -1000, opacity: 0 });\n          setTimeout(() => {\n              gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 180 });\n          }, 500);\n      }\n  } catch (error) {\n      console.error('Error handling card click:', error);\n  }\n};\n\n  const resetCards = () => {\n    setClickedCard(null);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(leftCardRef.current, { duration: 0.8, x: '-150px', rotation: -10, scale: 1, opacity: 1 });\n    gsap.to(rightCardRef.current, { duration: 0.8, x: '150px', rotation: 10, scale: 1, opacity: 1 });\n  };\n\n  return (\n    <Container intensity={intensity}>\n            <GrainEffect />\n      <CardsContainer>\n        <CardWrapper\n          ref={leftCardRef}\n          onClick={() => handleCardClick('left')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/junebaby.png')} />\n            <CardBack>\n              <Title>Truth & Dare</Title>\n              <CardText>{currentPlayer}, {clickedCard === 'left' && randomText}</CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n        <CardWrapper\n          ref={rightCardRef}\n          onClick={() => handleCardClick('right')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/love.png')} />\n            <CardBack>\n              <Title>Truth & Dare</Title>\n              <CardText>{currentPlayer}, {clickedCard === 'right' && randomText}</CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n      </CardsContainer>\n      <ButtonContainer>\n        <Button onClick={resetCards}>\n          <span role=\"img\" aria-label=\"Tour\">👤</span> Joueur suivant\n        </Button>\n        <Button onClick={() => { \n          console.log('Intensity button clicked');\n          changeIntensity();\n        }}>\n          <span role=\"img\" aria-label=\"Tour\">👤</span>{intensity.charAt(0).toUpperCase() + intensity.slice(1)}\n        </Button>\n      </ButtonContainer>\n\n    </Container>\n  );\n};\n\nexport default ActionVerite;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}