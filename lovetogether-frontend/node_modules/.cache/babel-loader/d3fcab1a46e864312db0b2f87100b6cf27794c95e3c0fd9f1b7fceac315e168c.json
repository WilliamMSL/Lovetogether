{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { UserContext } from './UserContext'; // Import the context\nimport axios from 'axios';\nimport gsap from 'gsap';\n// ... autres imports\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ActionVerite = () => {\n  _s();\n  const {\n    firstName1,\n    firstName2,\n    selectedToys,\n    updateUserPreferences\n  } = useContext(UserContext); // Use context\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const intervalRef = useRef(null);\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n  const [currentPlayer, setCurrentPlayer] = useState(firstName1 || '');\n  const [intensity, setIntensity] = useState('low');\n  const [isModalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    setCurrentPlayer(firstName1 || '');\n  }, [firstName1]);\n  const handleSave = data => {\n    updateUserPreferences(data); // Update preferences through context\n    console.log(\"Data saved:\", data);\n  };\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const toysParam = selectedToys !== null && selectedToys !== void 0 && selectedToys.length ? [...selectedToys, 'all'] : ['all'];\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: {\n          type,\n          player: mappedPlayer,\n          toys: toysParam.join(','),\n          intensity\n        }\n      });\n      if (response.data && response.data.template) {\n        const {\n          template,\n          duration\n        } = response.data;\n        setDuration(duration || null);\n        setRemainingTime(duration);\n        return template;\n      } else {\n        return 'No data available';\n      }\n    } catch (error) {\n      console.error('Error loading text', error);\n      return 'Error loading text';\n    }\n  };\n  const handleCardClick = async card => {\n    if (clickedCard) return;\n    try {\n      let randomText = '';\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n      }\n      setRandomText(randomText);\n      setClickedCard(card);\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: -1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null);\n    setRemainingTime(null);\n    setIsPaused(false);\n    setIsStarted(false);\n    clearInterval(intervalRef.current);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    gsap.to(leftCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(rightCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(leftCardRef.current, {\n      duration: 0.8,\n      x: '-150px',\n      rotation: -10,\n      scale: 1,\n      opacity: 1\n    });\n    gsap.to(rightCardRef.current, {\n      duration: 0.8,\n      x: '150px',\n      rotation: 10,\n      scale: 1,\n      opacity: 1\n    });\n  };\n  const startTimer = () => {\n    if (!remainingTime) return;\n    setIsStarted(true);\n    setIsPaused(false);\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n  };\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setRemainingTime(duration);\n    setIsPaused(false);\n    startTimer();\n  };\n  const handleTimerButtonClick = () => {\n    if (remainingTime === 0) {\n      resetTimer();\n    } else if (!isStarted) {\n      startTimer();\n    } else if (isPaused) {\n      startTimer();\n    } else {\n      pauseTimer();\n    }\n  };\n  const changeIntensity = () => {\n    setIntensity(prev => {\n      if (prev === 'low') return 'medium';\n      if (prev === 'medium') return 'high';\n      return 'low';\n    });\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    intensity: intensity,\n    children: [/*#__PURE__*/_jsxDEV(CardsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: leftCardRef,\n        onClick: () => handleCardClick('left'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/junebaby.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: clickedCard === 'left' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: rightCardRef,\n        onClick: () => handleCardClick('right'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/love.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: clickedCard === 'right' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [clickedCard ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetCards,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Tour\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), \" Joueur suivant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), duration && /*#__PURE__*/_jsxDEV(TimerButton, {\n          onClick: handleTimerButtonClick,\n          children: remainingTime === 0 ? 'Recommencer' : isPaused ? 'Reprendre' : `Pause (${formatTime(remainingTime)})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"Tour\",\n          children: \"\\uD83D\\uDC64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), \" \\xC0 ton tour, \", currentPlayer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), !clickedCard && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeIntensity,\n        children: intensity === 'low' ? '👀 Découverte' : intensity === 'medium' ? '🔥 Préliminaires' : '🔞 Dans l\\'action'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GrainEffect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setModalOpen(false),\n      onSave: handleSave,\n      selectedToys: selectedToys,\n      formData: {\n        firstName1,\n        firstName2\n      },\n      setFormData: ({\n        firstName1,\n        firstName2\n      }) => {\n        updateUserPreferences({\n          firstName1,\n          firstName2,\n          selectedToys\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionVerite, \"Hjj4WPbYCfq272NoJsQoTnRnjl0=\");\n_c = ActionVerite;\nexport default ActionVerite;\nvar _c;\n$RefreshReg$(_c, \"ActionVerite\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useContext","styled","UserContext","axios","gsap","jsxDEV","_jsxDEV","Fragment","_Fragment","ActionVerite","_s","firstName1","firstName2","selectedToys","updateUserPreferences","clickedCard","setClickedCard","randomText","setRandomText","duration","setDuration","remainingTime","setRemainingTime","isPaused","setIsPaused","isStarted","setIsStarted","intervalRef","leftCardRef","rightCardRef","currentPlayer","setCurrentPlayer","intensity","setIntensity","isModalOpen","setModalOpen","handleSave","data","console","log","fetchRandomActionOrTruth","type","player","mappedPlayer","toysParam","length","response","get","params","toys","join","template","error","handleCardClick","card","to","current","x","y","rotation","scale","opacity","setTimeout","querySelector","rotationY","resetCards","clearInterval","prevPlayer","startTimer","setInterval","prevTime","pauseTimer","resetTimer","handleTimerButtonClick","changeIntensity","prev","formatTime","seconds","minutes","Math","floor","secs","Container","children","CardsContainer","CardWrapper","ref","onClick","CardInner","className","CardFront","image","require","fileName","_jsxFileName","lineNumber","columnNumber","CardBack","Title","CardText","Footer","ButtonContainer","Button","role","TimerButton","disabled","GrainEffect","Modal","isOpen","onClose","onSave","formData","setFormData","_c","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { UserContext } from './UserContext';  // Import the context\nimport axios from 'axios';\nimport gsap from 'gsap';\n// ... autres imports\n\nconst ActionVerite = () => {\n  const { firstName1, firstName2, selectedToys, updateUserPreferences } = useContext(UserContext);  // Use context\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const intervalRef = useRef(null);\n\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n\n  const [currentPlayer, setCurrentPlayer] = useState(firstName1 || '');\n  const [intensity, setIntensity] = useState('low');\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    setCurrentPlayer(firstName1 || '');\n  }, [firstName1]);\n\n  const handleSave = (data) => {\n    updateUserPreferences(data); // Update preferences through context\n    console.log(\"Data saved:\", data);\n  };\n\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const toysParam = selectedToys?.length ? [...selectedToys, 'all'] : ['all'];\n\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: { type, player: mappedPlayer, toys: toysParam.join(','), intensity }\n      });\n\n      if (response.data && response.data.template) {\n        const { template, duration } = response.data;\n        setDuration(duration || null);\n        setRemainingTime(duration);\n        return template;\n      } else {\n        return 'No data available';\n      }\n    } catch (error) {\n      console.error('Error loading text', error);\n      return 'Error loading text';\n    }\n  };\n\n  const handleCardClick = async (card) => {\n    if (clickedCard) return;\n\n    try {\n      let randomText = '';\n\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n      }\n\n      setRandomText(randomText);\n      setClickedCard(card);\n\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(leftCardRef.current, { duration: 0.8, x: -1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null);\n    setRemainingTime(null);\n    setIsPaused(false);\n    setIsStarted(false);\n    clearInterval(intervalRef.current);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(leftCardRef.current, { duration: 0.8, x: '-150px', rotation: -10, scale: 1, opacity: 1 });\n    gsap.to(rightCardRef.current, { duration: 0.8, x: '150px', rotation: 10, scale: 1, opacity: 1 });\n  };\n\n  const startTimer = () => {\n    if (!remainingTime) return;\n\n    setIsStarted(true);\n    setIsPaused(false);\n\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n  };\n\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setRemainingTime(duration);\n    setIsPaused(false);\n    startTimer();\n  };\n\n  const handleTimerButtonClick = () => {\n    if (remainingTime === 0) {\n      resetTimer();\n    } else if (!isStarted) {\n      startTimer();\n    } else if (isPaused) {\n      startTimer();\n    } else {\n      pauseTimer();\n    }\n  };\n\n  const changeIntensity = () => {\n    setIntensity(prev => {\n      if (prev === 'low') return 'medium';\n      if (prev === 'medium') return 'high';\n      return 'low';\n    });\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  return (\n    <Container intensity={intensity}>\n      <CardsContainer>\n        <CardWrapper\n          ref={leftCardRef}\n          onClick={() => handleCardClick('left')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/junebaby.png')} />\n            <CardBack>\n              <Title>Truth & Dare</Title>\n              <CardText>{clickedCard === 'left' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer}</CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n        <CardWrapper\n          ref={rightCardRef}\n          onClick={() => handleCardClick('right')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/love.png')} />\n            <CardBack>\n              <Title>Truth & Dare</Title>\n              <CardText>{clickedCard === 'right' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer}</CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n      </CardsContainer>\n      <ButtonContainer>\n        {clickedCard ? (\n          <>\n            <Button onClick={resetCards}>\n              <span role=\"img\" aria-label=\"Tour\">👤</span> Joueur suivant\n            </Button>\n            {duration && (\n              <TimerButton onClick={handleTimerButtonClick}>\n                {remainingTime === 0 ? 'Recommencer' : isPaused ? 'Reprendre' : `Pause (${formatTime(remainingTime)})`}\n              </TimerButton>\n            )}\n          </>\n        ) : (\n          <Button disabled>\n            <span role=\"img\" aria-label=\"Tour\">👤</span> À ton tour, {currentPlayer}\n          </Button>\n        )}\n        {!clickedCard && (\n          <Button onClick={changeIntensity}>\n            {intensity === 'low' ? '👀 Découverte' : intensity === 'medium' ? '🔥 Préliminaires' : '🔞 Dans l\\'action'}\n          </Button>\n        )}\n      </ButtonContainer>\n      <GrainEffect />\n      <Modal\n        isOpen={isModalOpen}\n        onClose={() => setModalOpen(false)}\n        onSave={handleSave}\n        selectedToys={selectedToys}\n        formData={{ firstName1, firstName2 }}\n        setFormData={({ firstName1, firstName2 }) => {\n          updateUserPreferences({ firstName1, firstName2, selectedToys });\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default ActionVerite;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}