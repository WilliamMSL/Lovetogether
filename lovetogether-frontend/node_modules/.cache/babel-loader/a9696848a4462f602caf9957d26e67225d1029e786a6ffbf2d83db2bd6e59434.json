{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/CardContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Création du contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContext = /*#__PURE__*/createContext();\n\n// Hook personnalisé pour utiliser le contexte\nexport const useCard = () => {\n  _s();\n  return useContext(CardContext);\n};\n\n// Fournisseur de contexte\n_s(useCard, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CardProvider = ({\n  children\n}) => {\n  _s2();\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  // Fonction pour sélectionner une carte\n  const selectCard = card => {\n    setSelectedCard(card);\n  };\n\n  // Fonction pour réinitialiser la carte sélectionnée\n  const resetCard = () => {\n    setSelectedCard(null); // Réinitialise l'état en enlevant la sélection\n  };\n\n  // Fonction pour vider l'état de sélection (peut être utile selon les besoins)\n  const clearSelection = () => {\n    setSelectedCard(null);\n  };\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: {\n      selectedCard,\n      selectCard,\n      resetCard,\n      clearSelection\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s2(CardProvider, \"axKFp42fepc+pMvgIT6NP3Hz6vE=\");\n_c = CardProvider;\nvar _c;\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CardContext","useCard","_s","CardProvider","children","_s2","selectedCard","setSelectedCard","selectCard","card","resetCard","clearSelection","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/CardContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Création du contexte\nconst CardContext = createContext();\n\n// Hook personnalisé pour utiliser le contexte\nexport const useCard = () => {\n  return useContext(CardContext);\n};\n\n// Fournisseur de contexte\nexport const CardProvider = ({ children }) => {\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  // Fonction pour sélectionner une carte\n  const selectCard = (card) => {\n    setSelectedCard(card);\n  };\n\n  // Fonction pour réinitialiser la carte sélectionnée\n  const resetCard = () => {\n    setSelectedCard(null); // Réinitialise l'état en enlevant la sélection\n  };\n\n  // Fonction pour vider l'état de sélection (peut être utile selon les besoins)\n  const clearSelection = () => {\n    setSelectedCard(null);\n  };\n\n  return (\n    <CardContext.Provider value={{ selectedCard, selectCard, resetCard, clearSelection }}>\n      {children}\n    </CardContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;;AAED;AAAAE,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMW,UAAU,GAAIC,IAAI,IAAK;IAC3BF,eAAe,CAACE,IAAI,CAAC;EACvB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBH,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED;EACA,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BJ,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEP,YAAY;MAAEE,UAAU;MAAEE,SAAS;MAAEC;IAAe,CAAE;IAAAP,QAAA,EAClFA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACZ,GAAA,CAvBWF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}