{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nimport gsap from 'gsap';\nimport AVCardComponent from './AVCardComponent';\nimport AVTimerAndButtons from './AVTimerAndButtons';\nimport AVModal from './AVModal';\nimport GrainEffect from './GrainEffect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({\n  intensity\n}) => intensity === 'low' ? '#FBF8F1' : intensity === 'medium' ? '#D51C2C' : '#5A0C13'};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 1;\n`;\n_c = Container;\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n_c2 = CardsContainer;\nconst ActionVerite = () => {\n  _s();\n  const {\n    firstName1,\n    firstName2,\n    selectedToys\n  } = useContext(UserContext);\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const intervalRef = useRef(null);\n  const [showSkipButton, setShowSkipButton] = useState(false);\n  const timerRectangleRef = useRef(null);\n  const animationRef = useRef(null);\n  const [clickCount, setClickCount] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n  const [currentPlayer, setCurrentPlayer] = useState(firstName1 || '');\n  const [intensity, setIntensity] = useState('low');\n  useEffect(() => {\n    setCurrentPlayer(firstName1 || '');\n  }, [firstName1, firstName2, selectedToys]);\n  useEffect(() => {\n    gsap.set(leftCardRef.current, {\n      x: '-150px',\n      rotation: -10\n    });\n    gsap.set(rightCardRef.current, {\n      x: '150px',\n      rotation: 10\n    });\n  }, [intensity]);\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const otherPlayer = player === firstName1 ? firstName2 : firstName1;\n      const toysParam = selectedToys !== null && selectedToys !== void 0 && selectedToys.length ? [...selectedToys, 'all'] : ['all'];\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: {\n          type: type,\n          player: mappedPlayer,\n          toys: toysParam.join(','),\n          intensity: intensity\n        }\n      });\n      if (response.data && response.data.template) {\n        let {\n          template,\n          duration\n        } = response.data;\n        setDuration(duration || null);\n        setRemainingTime(duration);\n        template = template.charAt(0).toLowerCase() + template.slice(1);\n        template = template.replace('{Currentplayer}', player).replace('{AutrePlayer}', otherPlayer);\n        return template;\n      } else {\n        return 'No data available';\n      }\n    } catch (error) {\n      console.error('Error loading text:', error);\n      return 'Error loading text';\n    }\n  };\n  const handleCardClick = async card => {\n    if (clickedCard) return;\n    try {\n      let randomText = '';\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n        if (intensity === 'low') {\n          setClickCount(prevCount => {\n            const newCount = prevCount + 1;\n            if (newCount >= 10) {\n              setShowModal(true);\n            }\n            return newCount;\n          });\n        }\n      }\n      setRandomText(randomText);\n      setClickedCard(card);\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: -1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      }\n      if (duration) {\n        setShowSkipButton(true);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null);\n    setRemainingTime(null);\n    setIsPaused(false);\n    setIsStarted(false);\n    setShowSkipButton(false);\n    clearInterval(intervalRef.current);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    if (animationRef.current) {\n      animationRef.current.kill();\n      animationRef.current = null;\n    }\n    gsap.set(timerRectangleRef.current, {\n      height: '0%'\n    });\n    gsap.to(leftCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(rightCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(leftCardRef.current, {\n      duration: 0.8,\n      x: '-150px',\n      rotation: -10,\n      scale: 1,\n      opacity: 1\n    });\n    gsap.to(rightCardRef.current, {\n      duration: 0.8,\n      x: '150px',\n      rotation: 10,\n      scale: 1,\n      opacity: 1\n    });\n  };\n  const handleModalAccept = () => {\n    setIntensity('medium');\n    setShowModal(false);\n  };\n  const handleModalDecline = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    intensity: intensity,\n    children: [/*#__PURE__*/_jsxDEV(CardsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(AVCardComponent, {\n        ref: leftCardRef,\n        onClick: () => handleCardClick('left'),\n        image: require('../images/junebaby.png'),\n        title: \"Truth & Dare\",\n        text: clickedCard === 'left' ? randomText : null,\n        currentPlayer: currentPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AVCardComponent, {\n        ref: rightCardRef,\n        onClick: () => handleCardClick('right'),\n        image: require('../images/love.png'),\n        title: \"Truth & Dare\",\n        text: clickedCard === 'right' ? randomText : null,\n        currentPlayer: currentPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AVTimerAndButtons, {\n      clickedCard: clickedCard,\n      duration: duration,\n      isStarted: isStarted,\n      isPaused: isPaused,\n      remainingTime: remainingTime,\n      showSkipButton: showSkipButton,\n      currentPlayer: currentPlayer,\n      intensity: intensity,\n      handleTimerButtonClick: handleTimerButtonClick,\n      resetAndStartTimer: resetAndStartTimer,\n      handleSkipClick: handleSkipClick,\n      resetCards: resetCards,\n      changeIntensity: changeIntensity,\n      formatTime: formatTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AVModal, {\n      showModal: showModal,\n      handleModalAccept: handleModalAccept,\n      handleModalDecline: handleModalDecline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GrainEffect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionVerite, \"jUlxFpBPRYcLZkmzutM2XHsVfJg=\");\n_c3 = ActionVerite;\nexport default ActionVerite;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CardsContainer\");\n$RefreshReg$(_c3, \"ActionVerite\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","styled","axios","UserContext","gsap","AVCardComponent","AVTimerAndButtons","AVModal","GrainEffect","jsxDEV","_jsxDEV","Container","div","intensity","_c","CardsContainer","_c2","ActionVerite","_s","firstName1","firstName2","selectedToys","clickedCard","setClickedCard","randomText","setRandomText","duration","setDuration","remainingTime","setRemainingTime","isPaused","setIsPaused","isStarted","setIsStarted","intervalRef","showSkipButton","setShowSkipButton","timerRectangleRef","animationRef","clickCount","setClickCount","showModal","setShowModal","leftCardRef","rightCardRef","currentPlayer","setCurrentPlayer","setIntensity","set","current","x","rotation","fetchRandomActionOrTruth","type","player","mappedPlayer","otherPlayer","toysParam","length","response","get","params","toys","join","data","template","charAt","toLowerCase","slice","replace","error","console","handleCardClick","card","prevCount","newCount","to","y","scale","opacity","setTimeout","querySelector","rotationY","resetCards","clearInterval","prevPlayer","kill","height","handleModalAccept","handleModalDecline","children","ref","onClick","image","require","title","text","fileName","_jsxFileName","lineNumber","columnNumber","handleTimerButtonClick","resetAndStartTimer","handleSkipClick","changeIntensity","formatTime","_c3","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nimport gsap from 'gsap'\nimport AVCardComponent from './AVCardComponent';\nimport AVTimerAndButtons from './AVTimerAndButtons';\nimport AVModal from './AVModal';\nimport GrainEffect from './GrainEffect';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({ intensity }) => \n    intensity === 'low' ? '#FBF8F1' : \n    intensity === 'medium' ? '#D51C2C' : \n    '#5A0C13'};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 1;\n`;\n\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n\nconst ActionVerite = () => {\n  const { firstName1, firstName2, selectedToys } = useContext(UserContext);\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const intervalRef = useRef(null);\n  const [showSkipButton, setShowSkipButton] = useState(false);\n  const timerRectangleRef = useRef(null);\n  const animationRef = useRef(null);\n  const [clickCount, setClickCount] = useState(0); \n  const [showModal, setShowModal] = useState(false);\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n\n  const [currentPlayer, setCurrentPlayer] = useState(firstName1 || '');\n  const [intensity, setIntensity] = useState('low');\n\n  useEffect(() => {\n    setCurrentPlayer(firstName1 || '');\n  }, [firstName1, firstName2, selectedToys]);\n\n  useEffect(() => {\n    gsap.set(leftCardRef.current, { x: '-150px', rotation: -10 });\n    gsap.set(rightCardRef.current, { x: '150px', rotation: 10 });\n  }, [intensity]);\n\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const otherPlayer = player === firstName1 ? firstName2 : firstName1;\n      const toysParam = selectedToys?.length ? [...selectedToys, 'all'] : ['all'];\n\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: { type: type, player: mappedPlayer, toys: toysParam.join(','), intensity: intensity }\n      });\n\n      if (response.data && response.data.template) {\n        let { template, duration } = response.data;\n        setDuration(duration || null);\n        setRemainingTime(duration);\n\n        template = template.charAt(0).toLowerCase() + template.slice(1);\n        template = template.replace('{Currentplayer}', player)\n                           .replace('{AutrePlayer}', otherPlayer);\n\n        return template;\n      } else {\n        return 'No data available';\n      }\n    } catch (error) {\n      console.error('Error loading text:', error);\n      return 'Error loading text';\n    }\n  };\n\n  const handleCardClick = async (card) => {\n    if (clickedCard) return;\n\n    try {\n      let randomText = '';\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n        if (intensity === 'low') {\n          setClickCount(prevCount => {\n            const newCount = prevCount + 1;\n            if (newCount >= 10) {\n              setShowModal(true);\n            }\n            return newCount;\n          });\n        }\n      }\n\n      setRandomText(randomText);\n      setClickedCard(card);\n\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(leftCardRef.current, { duration: 0.8, x: -1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      }\n\n      if (duration) {\n        setShowSkipButton(true);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null);\n    setRemainingTime(null);\n    setIsPaused(false);\n    setIsStarted(false);\n    setShowSkipButton(false);\n    clearInterval(intervalRef.current);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n\n    if (animationRef.current) {\n      animationRef.current.kill();\n      animationRef.current = null;\n    }\n    gsap.set(timerRectangleRef.current, { height: '0%' });\n\n    gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(leftCardRef.current, { duration: 0.8, x: '-150px', rotation: -10, scale: 1, opacity: 1 });\n    gsap.to(rightCardRef.current, { duration: 0.8, x: '150px', rotation: 10, scale: 1, opacity: 1 });\n  };\n\n  const handleModalAccept = () => {\n    setIntensity('medium');\n    setShowModal(false);\n  };\n\n  const handleModalDecline = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Container intensity={intensity}>\n      <CardsContainer>\n        <AVCardComponent\n          ref={leftCardRef}\n          onClick={() => handleCardClick('left')}\n          image={require('../images/junebaby.png')}\n          title=\"Truth & Dare\"\n          text={clickedCard === 'left' ? randomText : null}\n          currentPlayer={currentPlayer}\n        />\n        <AVCardComponent\n          ref={rightCardRef}\n          onClick={() => handleCardClick('right')}\n          image={require('../images/love.png')}\n          title=\"Truth & Dare\"\n          text={clickedCard === 'right' ? randomText : null}\n          currentPlayer={currentPlayer}\n        />\n      </CardsContainer>\n\n      <AVTimerAndButtons\n        clickedCard={clickedCard}\n        duration={duration}\n        isStarted={isStarted}\n        isPaused={isPaused}\n        remainingTime={remainingTime}\n        showSkipButton={showSkipButton}\n        currentPlayer={currentPlayer}\n        intensity={intensity}\n        handleTimerButtonClick={handleTimerButtonClick}\n        resetAndStartTimer={resetAndStartTimer}\n        handleSkipClick={handleSkipClick}\n        resetCards={resetCards}\n        changeIntensity={changeIntensity}\n        formatTime={formatTime}\n      />\n\n      <AVModal\n        showModal={showModal}\n        handleModalAccept={handleModalAccept}\n        handleModalDecline={handleModalDecline}\n      />\n\n      <GrainEffect />\n    </Container>\n  );\n};\n\nexport default ActionVerite;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}