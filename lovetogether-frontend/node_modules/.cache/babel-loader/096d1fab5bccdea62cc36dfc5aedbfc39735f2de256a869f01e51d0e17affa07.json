{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport lowIntensityImage from '../images/logo-5.svg';\nimport mediumIntensityImage from '../images/whitelogo-10.svg';\nimport highIntensityImage from '../images/whitelogo-20.svg';\nimport GrainEffect from './GrainEffect';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({\n  intensity\n}) => intensity === 'low' ? '#FBF8F1' : intensity === 'medium' ? '#D51C2C' : '#5A0C13'};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 1;\n`;\n_c = Container;\nconst LogoContainer = styled.div`\n  position: relative;\n  width: 300px;\n  height: 300px;\n  background-image: ${({\n  intensity\n}) => intensity === 'low' ? `url(${lowIntensityImage})` : intensity === 'medium' ? `url(${mediumIntensityImage})` : `url(${highIntensityImage})`};\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  mask-image: ${({\n  intensity\n}) => intensity === 'low' ? `url(${lowIntensityImage})` : intensity === 'medium' ? `url(${mediumIntensityImage})` : `url(${highIntensityImage})`};\n  mask-size: contain;\n  mask-repeat: no-repeat;\n  mask-position: center;\n`;\n_c2 = LogoContainer;\nconst Fill = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #ff4500; /* Couleur de remplissage */\n  transform-origin: bottom;\n  transform: scaleY(0);\n  transition: transform 1s ease-in-out; /* Peut ajuster le timing */\n`;\n_c3 = Fill;\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n_c4 = CardsContainer;\nconst CardWrapper = styled.div`\n  perspective: 1000px;\n  width: 392px;\n  height: 548px;\n  position: absolute;\n  cursor: pointer;\n  z-index: 5;\n`;\n_c5 = CardWrapper;\nconst Footer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  color: #000000;\n  margin-top: 20px;\n`;\n_c6 = Footer;\nconst CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n`;\n_c7 = CardInner;\nconst CardFace = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 16px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n`;\nconst CardFront = styled(CardFace)`\n  background-image: url(${props => props.image});\n`;\n_c8 = CardFront;\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n_c9 = Title;\nconst CardBack = styled(CardFace)`\n  background-color: white;\n  transform: rotateY(180deg);\n  display: flex;\n  flex-direction: column;\n  padding: 48px;\n  justify-content: space-between;\n`;\n_c10 = CardBack;\nconst CardText = styled.div`\n  color: #333;\n  font-family: Paragon;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n_c11 = CardText;\nconst ButtonContainer = styled.div`\n  position: absolute;\n  bottom: 48px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n  z-index: 5;\n`;\n_c12 = ButtonContainer;\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  color: #000;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover:enabled {\n    background-color: #fff5f5;\n    color: #ff4500;\n    border-color: #ff4500;\n    box-shadow: 0 6px 12px rgba(255, 69, 0, 0.3);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n`;\n_c13 = Button;\nconst TimerButton = styled(Button)`\n  background-color: #ff4500;\n  color: white;\n\n  &:hover {\n    background-color: #ff5733;\n  }\n`;\n_c14 = TimerButton;\nconst ActionVerite = () => {\n  _s();\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null); // État pour la durée du gage\n  const [remainingTime, setRemainingTime] = useState(null); // État pour le temps restant\n  const [isPaused, setIsPaused] = useState(false); // État pour savoir si le timer est en pause\n  const [isStarted, setIsStarted] = useState(false); // État pour savoir si le timer a été lancé\n  const intervalRef = useRef(null); // Utilisation de useRef pour stocker l'intervalle\n  const fillRef = useRef(null); // Référence pour l'élément de remplissage\n\n  const [selectedToys, setSelectedToys] = useState([]);\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n  const [currentPlayer, setCurrentPlayer] = useState('');\n  const [firstName1, setFirstName1] = useState('');\n  const [firstName2, setFirstName2] = useState('');\n  useEffect(() => {\n    const savedPreferences = localStorage.getItem('userPreferences');\n    if (savedPreferences) {\n      const {\n        firstName1,\n        firstName2,\n        selectedToys\n      } = JSON.parse(savedPreferences);\n      setFirstName1(firstName1 || '');\n      setFirstName2(firstName2 || '');\n      setSelectedToys(selectedToys || []);\n      setCurrentPlayer(firstName1 || '');\n    }\n  }, []);\n  const [intensity, setIntensity] = useState('low'); // 'low', 'medium', 'high'\n\n  const changeIntensity = () => {\n    setIntensity(prevIntensity => {\n      let newIntensity;\n      if (prevIntensity === 'low') {\n        newIntensity = 'medium';\n      } else if (prevIntensity === 'medium') {\n        newIntensity = 'high';\n      } else {\n        newIntensity = 'low';\n      }\n      return newIntensity;\n    });\n  };\n  useEffect(() => {\n    gsap.set(leftCardRef.current, {\n      x: '-150px',\n      rotation: -10\n    });\n    gsap.set(rightCardRef.current, {\n      x: '150px',\n      rotation: 10\n    });\n  }, [intensity]);\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const toysParam = selectedToys !== null && selectedToys !== void 0 && selectedToys.length ? [...selectedToys, 'all'] : ['all'];\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: {\n          type: type,\n          player: mappedPlayer,\n          toys: toysParam.join(','),\n          intensity: intensity\n        }\n      });\n      if (response.data && response.data.template) {\n        const {\n          template,\n          duration\n        } = response.data;\n        setDuration(duration || null); // Mettre à jour la durée si elle est présente\n        setRemainingTime(duration); // Initialiser le temps restant\n        return template;\n      } else {\n        return 'No data available';\n      }\n    } catch (error) {\n      return 'Error loading text';\n    }\n  };\n  const handleCardClick = async card => {\n    if (clickedCard) return;\n    try {\n      let randomText = '';\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n      }\n      setRandomText(randomText);\n      setClickedCard(card);\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: -1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null); // Réinitialiser la durée\n    setRemainingTime(null); // Réinitialiser le temps restant\n    setIsPaused(false); // Réinitialiser l'état de pause\n    setIsStarted(false); // Réinitialiser l'état de démarrage\n    clearInterval(intervalRef.current); // Arrêter le timer\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    gsap.to(leftCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(rightCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(leftCardRef.current, {\n      duration: 0.8,\n      x: '-150px',\n      rotation: -10,\n      scale: 1,\n      opacity: 1\n    });\n    gsap.to(rightCardRef.current, {\n      duration: 0.8,\n      x: '150px',\n      rotation: 10,\n      scale: 1,\n      opacity: 1\n    });\n    gsap.set(fillRef.current, {\n      scaleY: 0\n    }); // Réinitialiser le remplissage du logo\n  };\n  const startTimer = () => {\n    if (!remainingTime) return;\n    setIsStarted(true);\n    setIsPaused(false); // Assurez-vous que l'état de pause est réinitialisé\n\n    gsap.to(fillRef.current, {\n      scaleY: 1,\n      duration: remainingTime\n    }); // Remplissage progressif du logo\n\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n    gsap.pause(); // Met en pause l'animation de GSAP\n  };\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setRemainingTime(duration);\n    setIsPaused(false);\n    gsap.set(fillRef.current, {\n      scaleY: 0\n    }); // Réinitialiser le remplissage\n    startTimer(); // Redémarre le timer immédiatement après le reset\n  };\n  const handleTimerButtonClick = () => {\n    if (remainingTime === 0) {\n      resetTimer(); // Recommence le timer à partir de la durée initiale\n    } else if (!isStarted) {\n      startTimer(); // Démarre le timer si ce n'est pas déjà fait\n    } else if (isPaused) {\n      startTimer(); // Reprend le timer depuis le temps restant\n    } else {\n      pauseTimer(); // Met en pause le timer\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    intensity: intensity,\n    children: [/*#__PURE__*/_jsxDEV(LogoContainer, {\n      intensity: intensity,\n      children: /*#__PURE__*/_jsxDEV(Fill, {\n        ref: fillRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: leftCardRef,\n        onClick: () => handleCardClick('left'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/junebaby.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: clickedCard === 'left' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: rightCardRef,\n        onClick: () => handleCardClick('right'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/love.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: clickedCard === 'right' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [clickedCard ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetCards,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Tour\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), \" Joueur suivant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), duration && /*#__PURE__*/_jsxDEV(TimerButton, {\n          onClick: handleTimerButtonClick,\n          children: remainingTime === 0 ? 'Recommencer' : isPaused ? 'Reprendre' : `Pause (${formatTime(remainingTime)})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"Tour\",\n          children: \"\\uD83D\\uDC64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), \" \\xC0 ton tour, \", currentPlayer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this), !clickedCard && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeIntensity,\n        children: intensity === 'low' ? '👀 Découverte' : intensity === 'medium' ? '🔥 Préliminaires' : '🔞 Dans l\\'action'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GrainEffect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionVerite, \"MoX2/CLzczasXGLnaHI8lUQFd50=\");\n_c15 = ActionVerite;\nexport default ActionVerite;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"LogoContainer\");\n$RefreshReg$(_c3, \"Fill\");\n$RefreshReg$(_c4, \"CardsContainer\");\n$RefreshReg$(_c5, \"CardWrapper\");\n$RefreshReg$(_c6, \"Footer\");\n$RefreshReg$(_c7, \"CardInner\");\n$RefreshReg$(_c8, \"CardFront\");\n$RefreshReg$(_c9, \"Title\");\n$RefreshReg$(_c10, \"CardBack\");\n$RefreshReg$(_c11, \"CardText\");\n$RefreshReg$(_c12, \"ButtonContainer\");\n$RefreshReg$(_c13, \"Button\");\n$RefreshReg$(_c14, \"TimerButton\");\n$RefreshReg$(_c15, \"ActionVerite\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styled","gsap","axios","lowIntensityImage","mediumIntensityImage","highIntensityImage","GrainEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","intensity","_c","LogoContainer","_c2","Fill","_c3","CardsContainer","_c4","CardWrapper","_c5","Footer","_c6","CardInner","_c7","CardFace","CardFront","props","image","_c8","Title","h1","_c9","CardBack","_c10","CardText","_c11","ButtonContainer","_c12","Button","button","_c13","TimerButton","_c14","ActionVerite","_s","clickedCard","setClickedCard","randomText","setRandomText","duration","setDuration","remainingTime","setRemainingTime","isPaused","setIsPaused","isStarted","setIsStarted","intervalRef","fillRef","selectedToys","setSelectedToys","leftCardRef","rightCardRef","currentPlayer","setCurrentPlayer","firstName1","setFirstName1","firstName2","setFirstName2","savedPreferences","localStorage","getItem","JSON","parse","setIntensity","changeIntensity","prevIntensity","newIntensity","set","current","x","rotation","fetchRandomActionOrTruth","type","player","mappedPlayer","toysParam","length","response","get","params","toys","join","data","template","error","handleCardClick","card","to","y","scale","opacity","setTimeout","querySelector","rotationY","console","resetCards","clearInterval","prevPlayer","scaleY","startTimer","setInterval","prevTime","pauseTimer","pause","resetTimer","handleTimerButtonClick","formatTime","seconds","minutes","Math","floor","secs","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","require","role","disabled","_c15","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport lowIntensityImage from '../images/logo-5.svg';\nimport mediumIntensityImage from '../images/whitelogo-10.svg';\nimport highIntensityImage from '../images/whitelogo-20.svg';\nimport GrainEffect from './GrainEffect';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({ intensity }) => \n    intensity === 'low' ? '#FBF8F1' : \n    intensity === 'medium' ? '#D51C2C' : \n    '#5A0C13'};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 1;\n`;\n\nconst LogoContainer = styled.div`\n  position: relative;\n  width: 300px;\n  height: 300px;\n  background-image: ${({ intensity }) => \n    intensity === 'low' ? `url(${lowIntensityImage})` : \n    intensity === 'medium' ? `url(${mediumIntensityImage})` : \n    `url(${highIntensityImage})`};\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  mask-image: ${({ intensity }) => \n    intensity === 'low' ? `url(${lowIntensityImage})` : \n    intensity === 'medium' ? `url(${mediumIntensityImage})` : \n    `url(${highIntensityImage})`};\n  mask-size: contain;\n  mask-repeat: no-repeat;\n  mask-position: center;\n`;\n\nconst Fill = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #ff4500; /* Couleur de remplissage */\n  transform-origin: bottom;\n  transform: scaleY(0);\n  transition: transform 1s ease-in-out; /* Peut ajuster le timing */\n`;\n\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n\nconst CardWrapper = styled.div`\n  perspective: 1000px;\n  width: 392px;\n  height: 548px;\n  position: absolute;\n  cursor: pointer;\n  z-index: 5;\n`;\n\nconst Footer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  color: #000000;\n  margin-top: 20px;\n`;\n\nconst CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n`;\n\nconst CardFace = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 16px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst CardFront = styled(CardFace)`\n  background-image: url(${props => props.image});\n`;\n\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst CardBack = styled(CardFace)`\n  background-color: white;\n  transform: rotateY(180deg);\n  display: flex;\n  flex-direction: column;\n  padding: 48px;\n  justify-content: space-between;\n`;\n\nconst CardText = styled.div`\n  color: #333;\n  font-family: Paragon;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n\nconst ButtonContainer = styled.div`\n  position: absolute;\n  bottom: 48px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n  z-index: 5;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  color: #000;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover:enabled {\n    background-color: #fff5f5;\n    color: #ff4500;\n    border-color: #ff4500;\n    box-shadow: 0 6px 12px rgba(255, 69, 0, 0.3);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n`;\n\nconst TimerButton = styled(Button)`\n  background-color: #ff4500;\n  color: white;\n\n  &:hover {\n    background-color: #ff5733;\n  }\n`;\n\nconst ActionVerite = () => {\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null); // État pour la durée du gage\n  const [remainingTime, setRemainingTime] = useState(null); // État pour le temps restant\n  const [isPaused, setIsPaused] = useState(false); // État pour savoir si le timer est en pause\n  const [isStarted, setIsStarted] = useState(false); // État pour savoir si le timer a été lancé\n  const intervalRef = useRef(null); // Utilisation de useRef pour stocker l'intervalle\n  const fillRef = useRef(null); // Référence pour l'élément de remplissage\n\n  const [selectedToys, setSelectedToys] = useState([]);\n  const leftCardRef = useRef(null);\n  const rightCardRef = useRef(null);\n\n  const [currentPlayer, setCurrentPlayer] = useState('');\n  const [firstName1, setFirstName1] = useState('');\n  const [firstName2, setFirstName2] = useState('');\n\n  useEffect(() => {\n    const savedPreferences = localStorage.getItem('userPreferences');\n    if (savedPreferences) {\n      const { firstName1, firstName2, selectedToys } = JSON.parse(savedPreferences);\n      setFirstName1(firstName1 || '');\n      setFirstName2(firstName2 || '');\n      setSelectedToys(selectedToys || []);\n      setCurrentPlayer(firstName1 || '');\n    }\n  }, []);\n\n  const [intensity, setIntensity] = useState('low'); // 'low', 'medium', 'high'\n\n  const changeIntensity = () => {\n    setIntensity(prevIntensity => {\n      let newIntensity;\n      if (prevIntensity === 'low') {\n        newIntensity = 'medium';\n      } else if (prevIntensity === 'medium') {\n        newIntensity = 'high';\n      } else {\n        newIntensity = 'low';\n      }\n  \n      return newIntensity;\n    });\n  };\n\n  useEffect(() => {\n    gsap.set(leftCardRef.current, { x: '-150px', rotation: -10 });\n    gsap.set(rightCardRef.current, { x: '150px', rotation: 10 });\n  }, [intensity]);\n\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const toysParam = selectedToys?.length ? [...selectedToys, 'all'] : ['all'];\n  \n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: { type: type, player: mappedPlayer, toys: toysParam.join(','), intensity: intensity }\n      });\n  \n      if (response.data && response.data.template) {\n        const { template, duration } = response.data;\n        setDuration(duration || null); // Mettre à jour la durée si elle est présente\n        setRemainingTime(duration); // Initialiser le temps restant\n        return template;\n      } else {\n        return 'No data available';\n      }\n    } catch (error) {\n      return 'Error loading text';\n    }\n  };\n\n  const handleCardClick = async (card) => {\n    if (clickedCard) return;\n\n    try {\n      let randomText = '';\n\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n      }\n\n      setRandomText(randomText);\n      setClickedCard(card);\n\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(leftCardRef.current, { duration: 0.8, x: -1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null); // Réinitialiser la durée\n    setRemainingTime(null); // Réinitialiser le temps restant\n    setIsPaused(false); // Réinitialiser l'état de pause\n    setIsStarted(false); // Réinitialiser l'état de démarrage\n    clearInterval(intervalRef.current); // Arrêter le timer\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(leftCardRef.current, { duration: 0.8, x: '-150px', rotation: -10, scale: 1, opacity: 1 });\n    gsap.to(rightCardRef.current, { duration: 0.8, x: '150px', rotation: 10, scale: 1, opacity: 1 });\n    gsap.set(fillRef.current, { scaleY: 0 }); // Réinitialiser le remplissage du logo\n  };\n\n  const startTimer = () => {\n    if (!remainingTime) return;\n\n    setIsStarted(true);\n    setIsPaused(false); // Assurez-vous que l'état de pause est réinitialisé\n\n    gsap.to(fillRef.current, { scaleY: 1, duration: remainingTime }); // Remplissage progressif du logo\n\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n    gsap.pause(); // Met en pause l'animation de GSAP\n  };\n\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setRemainingTime(duration);\n    setIsPaused(false);\n    gsap.set(fillRef.current, { scaleY: 0 }); // Réinitialiser le remplissage\n    startTimer(); // Redémarre le timer immédiatement après le reset\n  };\n\n  const handleTimerButtonClick = () => {\n    if (remainingTime === 0) {\n      resetTimer(); // Recommence le timer à partir de la durée initiale\n    } else if (!isStarted) {\n      startTimer(); // Démarre le timer si ce n'est pas déjà fait\n    } else if (isPaused) {\n      startTimer(); // Reprend le timer depuis le temps restant\n    } else {\n      pauseTimer(); // Met en pause le timer\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  return (\n    <Container intensity={intensity}>\n      <LogoContainer intensity={intensity}>\n        <Fill ref={fillRef} />\n      </LogoContainer>\n      \n      <CardsContainer>\n        <CardWrapper\n          ref={leftCardRef}\n          onClick={() => handleCardClick('left')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/junebaby.png')} />\n            <CardBack>\n              <Title>Truth & Dare</Title>\n              <CardText>{clickedCard === 'left' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer}</CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n        <CardWrapper\n          ref={rightCardRef}\n          onClick={() => handleCardClick('right')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/love.png')} />\n            <CardBack>\n              <Title>Truth & Dare</Title>\n              <CardText>{clickedCard === 'right' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer}</CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n      </CardsContainer>\n      <ButtonContainer>\n        {clickedCard ? (\n          <>\n            <Button onClick={resetCards}>\n              <span role=\"img\" aria-label=\"Tour\">👤</span> Joueur suivant\n            </Button>\n            {duration && (\n              <TimerButton onClick={handleTimerButtonClick}>\n                {remainingTime === 0 ? 'Recommencer' : isPaused ? 'Reprendre' : `Pause (${formatTime(remainingTime)})`}\n              </TimerButton>\n            )}\n          </>\n        ) : (\n          <Button disabled>\n            <span role=\"img\" aria-label=\"Tour\">👤</span> À ton tour, {currentPlayer}\n          </Button>\n        )}\n        {!clickedCard && (\n          <Button onClick={changeIntensity}>\n            {intensity === 'low' ? '👀 Découverte' : intensity === 'medium' ? '🔥 Préliminaires' : '🔞 Dans l\\'action'}\n          </Button>\n        )}\n      </ButtonContainer>\n      \n      <GrainEffect />\n\n    </Container>\n  );\n};\n\nexport default ActionVerite;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,IAAI,QAAQ,MAAM;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,OAAOC,oBAAoB,MAAM,4BAA4B;AAC7D,OAAOC,kBAAkB,MAAM,4BAA4B;AAC3D,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,SAAS,GAAGX,MAAM,CAACY,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,CAAC;EAAEC;AAAU,CAAC,KAChCA,SAAS,KAAK,KAAK,GAAG,SAAS,GAC/BA,SAAS,KAAK,QAAQ,GAAG,SAAS,GAClC,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAjBIH,SAAS;AAmBf,MAAMI,aAAa,GAAGf,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA,sBAAsB,CAAC;EAAEC;AAAU,CAAC,KAChCA,SAAS,KAAK,KAAK,GAAG,OAAOV,iBAAiB,GAAG,GACjDU,SAAS,KAAK,QAAQ,GAAG,OAAOT,oBAAoB,GAAG,GACvD,OAAOC,kBAAkB,GAAG;AAChC;AACA;AACA;AACA,gBAAgB,CAAC;EAAEQ;AAAU,CAAC,KAC1BA,SAAS,KAAK,KAAK,GAAG,OAAOV,iBAAiB,GAAG,GACjDU,SAAS,KAAK,QAAQ,GAAG,OAAOT,oBAAoB,GAAG,GACvD,OAAOC,kBAAkB,GAAG;AAChC;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAlBID,aAAa;AAoBnB,MAAME,IAAI,GAAGjB,MAAM,CAACY,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAVID,IAAI;AAYV,MAAME,cAAc,GAAGnB,MAAM,CAACY,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GARID,cAAc;AAUpB,MAAME,WAAW,GAAGrB,MAAM,CAACY,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GAPID,WAAW;AASjB,MAAME,MAAM,GAAGvB,MAAM,CAACY,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACY,GAAA,GAPID,MAAM;AASZ,MAAME,SAAS,GAAGzB,MAAM,CAACY,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACc,GAAA,GANID,SAAS;AAQf,MAAME,QAAQ,GAAG3B,MAAM,CAACY,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMgB,SAAS,GAAG5B,MAAM,CAAC2B,QAAQ,CAAC;AAClC,0BAA0BE,KAAK,IAAIA,KAAK,CAACC,KAAK;AAC9C,CAAC;AAACC,GAAA,GAFIH,SAAS;AAIf,MAAMI,KAAK,GAAGhC,MAAM,CAACiC,EAAE;AACvB;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,KAAK;AAOX,MAAMG,QAAQ,GAAGnC,MAAM,CAAC2B,QAAQ,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACS,IAAA,GAPID,QAAQ;AASd,MAAME,QAAQ,GAAGrC,MAAM,CAACY,GAAG;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAAC0B,IAAA,GALID,QAAQ;AAOd,MAAME,eAAe,GAAGvC,MAAM,CAACY,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC4B,IAAA,GAPID,eAAe;AASrB,MAAME,MAAM,GAAGzC,MAAM,CAAC0C,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GA3BIF,MAAM;AA6BZ,MAAMG,WAAW,GAAG5C,MAAM,CAACyC,MAAM,CAAC;AAClC;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}