{"ast":null,"code":"const express = require('express');\nconst mongoose = require('mongoose');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nconst redis = require('redis');\nconst app = express();\n\n// Middlewares\napp.use(bodyParser.json());\napp.use(cors());\n\n// Importation des routes\nconst userRoutes = require('./routes/user');\nconst truthOrDareRoutes = require('./routes/truthordare');\nconst toyRoutes = require('./routes/toys');\nconst roleplayRoutes = require('./routes/roleplay');\n\n// Route middlewares\napp.use('/api/users', userRoutes);\napp.use('/api/truthordare', truthOrDareRoutes);\napp.use('/api/toys', toyRoutes);\napp.use('/api/roleplay', roleplayRoutes);\n\n// Connexion à MongoDB Atlas\nmongoose.connect('mongodb+srv://Cluster98088:cmNmV0NITE5o@cluster98088.7q0ea.mongodb.net/LoveTogether?retryWrites=true&w=majority').then(() => console.log('Connected to MongoDB Atlas')).catch(err => console.error('Could not connect to MongoDB Atlas', err));\n\n// Créez un client Redis\nconst redisClient = redis.createClient();\nredisClient.on('connect', () => {\n  console.log('Connected to Redis');\n});\nredisClient.on('error', err => {\n  console.error('Redis error:', err);\n});\n\n// Démarrage du serveur\nconst PORT = process.env.PORT || 1812;\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`));","map":{"version":3,"names":["express","require","mongoose","bodyParser","cors","redis","app","use","json","userRoutes","truthOrDareRoutes","toyRoutes","roleplayRoutes","connect","then","console","log","catch","err","error","redisClient","createClient","on","PORT","process","env","listen"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/index.js"],"sourcesContent":["const express = require('express');\nconst mongoose = require('mongoose');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nconst redis = require('redis');\n\nconst app = express();\n\n// Middlewares\napp.use(bodyParser.json());\napp.use(cors());\n\n// Importation des routes\nconst userRoutes = require('./routes/user');\nconst truthOrDareRoutes = require('./routes/truthordare');\nconst toyRoutes = require('./routes/toys');\nconst roleplayRoutes = require('./routes/roleplay');\n\n// Route middlewares\napp.use('/api/users', userRoutes);\napp.use('/api/truthordare', truthOrDareRoutes);\napp.use('/api/toys', toyRoutes);\napp.use('/api/roleplay', roleplayRoutes);\n\n// Connexion à MongoDB Atlas\nmongoose.connect('mongodb+srv://Cluster98088:cmNmV0NITE5o@cluster98088.7q0ea.mongodb.net/LoveTogether?retryWrites=true&w=majority')\n  .then(() => console.log('Connected to MongoDB Atlas'))\n  .catch(err => console.error('Could not connect to MongoDB Atlas', err));\n\n// Créez un client Redis\nconst redisClient = redis.createClient();\n\nredisClient.on('connect', () => {\n  console.log('Connected to Redis');\n});\n\nredisClient.on('error', (err) => {\n  console.error('Redis error:', err);\n});\n\n// Démarrage du serveur\nconst PORT = process.env.PORT || 1812;\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`));"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAMK,GAAG,GAAGN,OAAO,CAAC,CAAC;;AAErB;AACAM,GAAG,CAACC,GAAG,CAACJ,UAAU,CAACK,IAAI,CAAC,CAAC,CAAC;AAC1BF,GAAG,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;;AAEf;AACA,MAAMK,UAAU,GAAGR,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMS,iBAAiB,GAAGT,OAAO,CAAC,sBAAsB,CAAC;AACzD,MAAMU,SAAS,GAAGV,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMW,cAAc,GAAGX,OAAO,CAAC,mBAAmB,CAAC;;AAEnD;AACAK,GAAG,CAACC,GAAG,CAAC,YAAY,EAAEE,UAAU,CAAC;AACjCH,GAAG,CAACC,GAAG,CAAC,kBAAkB,EAAEG,iBAAiB,CAAC;AAC9CJ,GAAG,CAACC,GAAG,CAAC,WAAW,EAAEI,SAAS,CAAC;AAC/BL,GAAG,CAACC,GAAG,CAAC,eAAe,EAAEK,cAAc,CAAC;;AAExC;AACAV,QAAQ,CAACW,OAAO,CAAC,iHAAiH,CAAC,CAChIC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CAAC,CACrDC,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAAC,oCAAoC,EAAED,GAAG,CAAC,CAAC;;AAEzE;AACA,MAAME,WAAW,GAAGf,KAAK,CAACgB,YAAY,CAAC,CAAC;AAExCD,WAAW,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;EAC9BP,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;AACnC,CAAC,CAAC;AAEFI,WAAW,CAACE,EAAE,CAAC,OAAO,EAAGJ,GAAG,IAAK;EAC/BH,OAAO,CAACI,KAAK,CAAC,cAAc,EAAED,GAAG,CAAC;AACpC,CAAC,CAAC;;AAEF;AACA,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AACrCjB,GAAG,CAACoB,MAAM,CAACH,IAAI,EAAE,MAAMR,OAAO,CAACC,GAAG,CAAC,0BAA0BO,IAAI,EAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}