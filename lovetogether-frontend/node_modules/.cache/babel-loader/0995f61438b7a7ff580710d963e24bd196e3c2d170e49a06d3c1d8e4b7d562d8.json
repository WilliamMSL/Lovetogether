{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport MainContent from './components/MainContent';\nimport Generator from './components/Generator';\nimport ActionVerite from './components/ActionVerite';\nimport Roleplay from './components/Roleplay';\nimport { CardProvider } from './components/CardContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst express = require('express');\nconst app = express();\nconst truthOrDareRoutes = require('../../');\nconst App = () => {\n  _s();\n  const [backgroundColor, setBackgroundColor] = useState('#FFFFFF');\n\n  // Initialisation de Redis\n  const RedisClient = require('./services/RedisClient');\n  const redisClient = new RedisClient();\n  app.use('/api/truthordare', truthOrDareRoutes);\n\n  // Reste du code de votre application\n\n  app.listen(3000, () => {\n    console.log('Server started on port 3000');\n  });\n  return /*#__PURE__*/_jsxDEV(CardProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(MainContent, {\n            backgroundColor: backgroundColor,\n            setBackgroundColor: setBackgroundColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/generator\",\n          element: /*#__PURE__*/_jsxDEV(Generator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/action-verite\",\n          element: /*#__PURE__*/_jsxDEV(ActionVerite, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/roleplay\",\n          element: /*#__PURE__*/_jsxDEV(Roleplay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aEVgI9IVPGvLj9obt5EW9+X2FRQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","MainContent","Generator","ActionVerite","Roleplay","CardProvider","jsxDEV","_jsxDEV","express","require","app","truthOrDareRoutes","App","_s","backgroundColor","setBackgroundColor","RedisClient","redisClient","use","listen","console","log","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport MainContent from './components/MainContent';\nimport Generator from './components/Generator';\nimport ActionVerite from './components/ActionVerite';\nimport Roleplay from './components/Roleplay';\nimport { CardProvider } from './components/CardContext';\n\n\nconst express = require('express');\nconst app = express();\nconst truthOrDareRoutes = require('../../');\n\nconst App = () => {\n  const [backgroundColor, setBackgroundColor] = useState('#FFFFFF');\n\n  // Initialisation de Redis\nconst RedisClient = require('./services/RedisClient');\nconst redisClient = new RedisClient();\n\napp.use('/api/truthordare', truthOrDareRoutes);\n\n// Reste du code de votre application\n\napp.listen(3000, () => {\n    console.log('Server started on port 3000');\n});\n\n\n  return (\n    <CardProvider>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<MainContent backgroundColor={backgroundColor} setBackgroundColor={setBackgroundColor} />} />\n          <Route path=\"/generator\" element={<Generator />} />\n          <Route path=\"/action-verite\" element={<ActionVerite />} />\n          <Route path=\"/roleplay\" element={<Roleplay />} />\n        </Routes>\n      </Router>\n    </CardProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,YAAY,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxD,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,GAAG,GAAGF,OAAO,CAAC,CAAC;AACrB,MAAMG,iBAAiB,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAE3C,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,SAAS,CAAC;;EAEjE;EACF,MAAMoB,WAAW,GAAGP,OAAO,CAAC,wBAAwB,CAAC;EACrD,MAAMQ,WAAW,GAAG,IAAID,WAAW,CAAC,CAAC;EAErCN,GAAG,CAACQ,GAAG,CAAC,kBAAkB,EAAEP,iBAAiB,CAAC;;EAE9C;;EAEAD,GAAG,CAACS,MAAM,CAAC,IAAI,EAAE,MAAM;IACnBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC9C,CAAC,CAAC;EAGA,oBACEd,OAAA,CAACF,YAAY;IAAAiB,QAAA,eACXf,OAAA,CAACT,MAAM;MAAAwB,QAAA,eACLf,OAAA,CAACP,MAAM;QAAAsB,QAAA,gBACLf,OAAA,CAACR,KAAK;UAACwB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEjB,OAAA,CAACN,WAAW;YAACa,eAAe,EAAEA,eAAgB;YAACC,kBAAkB,EAAEA;UAAmB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtHrB,OAAA,CAACR,KAAK;UAACwB,IAAI,EAAC,YAAY;UAACC,OAAO,eAAEjB,OAAA,CAACL,SAAS;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnDrB,OAAA,CAACR,KAAK;UAACwB,IAAI,EAAC,gBAAgB;UAACC,OAAO,eAAEjB,OAAA,CAACJ,YAAY;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1DrB,OAAA,CAACR,KAAK;UAACwB,IAAI,EAAC,WAAW;UAACC,OAAO,eAAEjB,OAAA,CAACH,QAAQ;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB,CAAC;AAACf,EAAA,CA5BID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}