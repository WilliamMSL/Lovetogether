{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport lowIntensityImage from '../images/logo-5.svg';\nimport mediumIntensityImage from '../images/whitelogo-10.svg';\nimport highIntensityImage from '../images/whitelogo-20.svg';\nimport GrainEffect from './GrainEffect';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({\n  intensity\n}) => intensity === 'low' ? '#FBF8F1' : intensity === 'medium' ? '#D51C2C' : '#5A0C13'};\n  background-image: ${({\n  intensity\n}) => intensity === 'low' ? `url(${lowIntensityImage})` : intensity === 'medium' ? `url(${mediumIntensityImage})` : `url(${highIntensityImage})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 1;\n`;\n_c = Container;\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n_c2 = CardsContainer;\nconst CardWrapper = styled.div`\n  perspective: 1000px;\n  width: 392px;\n  height: 548px;\n  position: absolute;\n  cursor: pointer;\n  z-index: 5;\n`;\n_c3 = CardWrapper;\nconst Footer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  color: #000000;\n  margin-top: 20px;\n`;\n_c4 = Footer;\nconst CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n`;\n_c5 = CardInner;\nconst CardFace = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 16px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n`;\nconst CardFront = styled(CardFace)`\n  background-image: url(${props => props.image});\n`;\n_c6 = CardFront;\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n_c7 = Title;\nconst CardBack = styled(CardFace)`\n  background-color: white;\n  transform: rotateY(180deg);\n  display: flex;\n  flex-direction: column;\n  padding: 48px;\n  justify-content: space-between;\n`;\n_c8 = CardBack;\nconst CardText = styled.div`\n  color: #333;\n  font-family: Paragon;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n_c9 = CardText;\nconst ButtonContainer = styled.div`\n  position: absolute;\n  bottom: 48px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n  z-index: 5;\n`;\n_c10 = ButtonContainer;\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  color: #000;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover:enabled {\n    background-color: #fff5f5;\n    color: #ff4500;\n    border-color: #ff4500;\n    box-shadow: 0 6px 12px rgba(255, 69, 0, 0.3);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n`;\n_c11 = Button;\nconst TimerButton = styled(Button)`\n  background-color: #ff4500;\n  color: white;\n\n  &:hover {\n    background-color: #ff5733;\n  }\n`;\n_c12 = TimerButton;\nconst ActionVerite = () => {\n  _s();\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const intervalRef = useRef(null);\n  const [selectedToys, setSelectedToys] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState('');\n  const [firstName1, setFirstName1] = useState('');\n  const [firstName2, setFirstName2] = useState('');\n  const [isModalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    const savedPreferences = localStorage.getItem('userPreferences');\n    if (savedPreferences) {\n      const {\n        firstName1,\n        firstName2,\n        selectedToys\n      } = JSON.parse(savedPreferences);\n      setFirstName1(firstName1 || '');\n      setFirstName2(firstName2 || '');\n      setSelectedToys(selectedToys || []);\n      setCurrentPlayer(firstName1 || '');\n    }\n  }, []);\n  const handleSave = data => {\n    setFirstName1(data.firstName1);\n    setFirstName2(data.firstName2);\n    setSelectedToys(data.selectedToys);\n    setCurrentPlayer(data.firstName1); // Reset to the first player's turn\n  };\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const toysParam = selectedToys !== null && selectedToys !== void 0 && selectedToys.length ? [...selectedToys, 'all'] : ['all'];\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: {\n          type: type,\n          player: mappedPlayer,\n          toys: toysParam.join(','),\n          intensity: intensity\n        }\n      });\n      if (response.data && response.data.template) {\n        const {\n          template,\n          duration\n        } = response.data;\n        setDuration(duration || null); // Mettre à jour la durée si elle est présente\n        setRemainingTime(duration); // Initialiser le temps restant\n        return template;\n      } else {\n        return 'No data available';\n      }\n    } catch (error) {\n      return 'Error loading text';\n    }\n  };\n  const handleCardClick = async card => {\n    if (clickedCard) return;\n    try {\n      let randomText = '';\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n      }\n      setRandomText(randomText);\n      setClickedCard(card);\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, {\n          duration: 0.8,\n          x: 0,\n          y: 0,\n          rotation: 0,\n          scale: 1\n        });\n        gsap.to(leftCardRef.current, {\n          duration: 0.8,\n          x: -1000,\n          opacity: 0\n        });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), {\n            rotationY: 180\n          });\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null);\n    setRemainingTime(null);\n    setIsPaused(false);\n    setIsStarted(false);\n    clearInterval(intervalRef.current);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    gsap.to(leftCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(rightCardRef.current.querySelector('.inner'), {\n      rotationY: 0\n    });\n    gsap.to(leftCardRef.current, {\n      duration: 0.8,\n      x: '-150px',\n      rotation: -10,\n      scale: 1,\n      opacity: 1\n    });\n    gsap.to(rightCardRef.current, {\n      duration: 0.8,\n      x: '150px',\n      rotation: 10,\n      scale: 1,\n      opacity: 1\n    });\n  };\n  const startTimer = () => {\n    if (!remainingTime) return;\n    setIsStarted(true);\n    setIsPaused(false);\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n  };\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setRemainingTime(duration);\n    setIsPaused(false);\n    startTimer();\n  };\n  const handleTimerButtonClick = () => {\n    if (remainingTime === 0) {\n      resetTimer();\n    } else if (!isStarted) {\n      startTimer();\n    } else if (isPaused) {\n      startTimer();\n    } else {\n      pauseTimer();\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    intensity: intensity,\n    children: [/*#__PURE__*/_jsxDEV(CardsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: leftCardRef,\n        onClick: () => handleCardClick('left'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/junebaby.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: clickedCard === 'left' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardWrapper, {\n        ref: rightCardRef,\n        onClick: () => handleCardClick('right'),\n        children: /*#__PURE__*/_jsxDEV(CardInner, {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(CardFront, {\n            image: require('../images/love.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Truth & Dare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: clickedCard === 'right' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"LoveTogether\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [clickedCard ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetCards,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Tour\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), \" Joueur suivant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), duration && /*#__PURE__*/_jsxDEV(TimerButton, {\n          onClick: handleTimerButtonClick,\n          children: remainingTime === 0 ? 'Recommencer' : isPaused ? 'Reprendre' : `Pause (${formatTime(remainingTime)})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"Tour\",\n          children: \"\\uD83D\\uDC64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), \" \\xC0 ton tour, \", currentPlayer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), !clickedCard && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeIntensity,\n        children: intensity === 'low' ? '👀 Découverte' : intensity === 'medium' ? '🔥 Préliminaires' : '🔞 Dans l\\'action'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GrainEffect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setModalOpen(false),\n      onSave: handleSave,\n      selectedToys: selectedToys,\n      formData: {\n        firstName1,\n        firstName2\n      },\n      setFormData: ({\n        firstName1,\n        firstName2\n      }) => {\n        setFirstName1(firstName1);\n        setFirstName2(firstName2);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionVerite, \"qFrqTyy7ej11COzC/YjXlWvu0tc=\");\n_c13 = ActionVerite;\nexport default ActionVerite;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CardsContainer\");\n$RefreshReg$(_c3, \"CardWrapper\");\n$RefreshReg$(_c4, \"Footer\");\n$RefreshReg$(_c5, \"CardInner\");\n$RefreshReg$(_c6, \"CardFront\");\n$RefreshReg$(_c7, \"Title\");\n$RefreshReg$(_c8, \"CardBack\");\n$RefreshReg$(_c9, \"CardText\");\n$RefreshReg$(_c10, \"ButtonContainer\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"TimerButton\");\n$RefreshReg$(_c13, \"ActionVerite\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styled","gsap","axios","lowIntensityImage","mediumIntensityImage","highIntensityImage","GrainEffect","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","intensity","_c","CardsContainer","_c2","CardWrapper","_c3","Footer","_c4","CardInner","_c5","CardFace","CardFront","props","image","_c6","Title","h1","_c7","CardBack","_c8","CardText","_c9","ButtonContainer","_c10","Button","button","_c11","TimerButton","_c12","ActionVerite","_s","clickedCard","setClickedCard","randomText","setRandomText","duration","setDuration","remainingTime","setRemainingTime","isPaused","setIsPaused","isStarted","setIsStarted","intervalRef","selectedToys","setSelectedToys","currentPlayer","setCurrentPlayer","firstName1","setFirstName1","firstName2","setFirstName2","isModalOpen","setModalOpen","savedPreferences","localStorage","getItem","JSON","parse","handleSave","data","fetchRandomActionOrTruth","type","player","mappedPlayer","toysParam","length","response","get","params","toys","join","template","error","handleCardClick","card","to","leftCardRef","current","x","y","rotation","scale","rightCardRef","opacity","setTimeout","querySelector","rotationY","console","resetCards","clearInterval","prevPlayer","startTimer","setInterval","prevTime","pauseTimer","resetTimer","handleTimerButtonClick","formatTime","seconds","minutes","Math","floor","secs","children","ref","onClick","className","require","fileName","_jsxFileName","lineNumber","columnNumber","role","disabled","changeIntensity","isOpen","onClose","onSave","formData","setFormData","_c13","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport lowIntensityImage from '../images/logo-5.svg';\nimport mediumIntensityImage from '../images/whitelogo-10.svg';\nimport highIntensityImage from '../images/whitelogo-20.svg';\nimport GrainEffect from './GrainEffect';\nimport Modal from './Modal';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({ intensity }) => \n    intensity === 'low' ? '#FBF8F1' : \n    intensity === 'medium' ? '#D51C2C' : \n    '#5A0C13'};\n  background-image: ${({ intensity }) => \n    intensity === 'low' ? `url(${lowIntensityImage})` : \n    intensity === 'medium' ? `url(${mediumIntensityImage})` : \n    `url(${highIntensityImage})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 1;\n`;\n\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n\nconst CardWrapper = styled.div`\n  perspective: 1000px;\n  width: 392px;\n  height: 548px;\n  position: absolute;\n  cursor: pointer;\n  z-index: 5;\n`;\n\nconst Footer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  color: #000000;\n  margin-top: 20px;\n`;\n\nconst CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n`;\n\nconst CardFace = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 16px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst CardFront = styled(CardFace)`\n  background-image: url(${props => props.image});\n`;\n\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst CardBack = styled(CardFace)`\n  background-color: white;\n  transform: rotateY(180deg);\n  display: flex;\n  flex-direction: column;\n  padding: 48px;\n  justify-content: space-between;\n`;\n\nconst CardText = styled.div`\n  color: #333;\n  font-family: Paragon;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n\nconst ButtonContainer = styled.div`\n  position: absolute;\n  bottom: 48px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n  z-index: 5;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  color: #000;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover:enabled {\n    background-color: #fff5f5;\n    color: #ff4500;\n    border-color: #ff4500;\n    box-shadow: 0 6px 12px rgba(255, 69, 0, 0.3);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n`;\n\nconst TimerButton = styled(Button)`\n  background-color: #ff4500;\n  color: white;\n\n  &:hover {\n    background-color: #ff5733;\n  }\n`;\n\nconst ActionVerite = () => {\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const intervalRef = useRef(null);\n\n  const [selectedToys, setSelectedToys] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState('');\n  const [firstName1, setFirstName1] = useState('');\n  const [firstName2, setFirstName2] = useState('');\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    const savedPreferences = localStorage.getItem('userPreferences');\n    if (savedPreferences) {\n      const { firstName1, firstName2, selectedToys } = JSON.parse(savedPreferences);\n      setFirstName1(firstName1 || '');\n      setFirstName2(firstName2 || '');\n      setSelectedToys(selectedToys || []);\n      setCurrentPlayer(firstName1 || '');\n    }\n  }, []);\n\n  const handleSave = (data) => {\n    setFirstName1(data.firstName1);\n    setFirstName2(data.firstName2);\n    setSelectedToys(data.selectedToys);\n    setCurrentPlayer(data.firstName1); // Reset to the first player's turn\n  };\n\n  const fetchRandomActionOrTruth = async (type, player) => {\n    try {\n      const mappedPlayer = player === firstName1 ? 'firstName1' : 'firstName2';\n      const toysParam = selectedToys?.length ? [...selectedToys, 'all'] : ['all'];\n\n      const response = await axios.get(`http://localhost:1812/api/truthordare/random`, {\n        params: { type: type, player: mappedPlayer, toys: toysParam.join(','), intensity: intensity }\n      });\n\n      if (response.data && response.data.template) {\n        const { template, duration } = response.data;\n        setDuration(duration || null); // Mettre à jour la durée si elle est présente\n        setRemainingTime(duration); // Initialiser le temps restant\n        return template;\n      } else {\n        return 'No data available';\n      }\n    } catch (error) {\n      return 'Error loading text';\n    }\n  };\n\n  const handleCardClick = async (card) => {\n    if (clickedCard) return;\n\n    try {\n      let randomText = '';\n\n      if (card === 'left') {\n        randomText = await fetchRandomActionOrTruth('truth', currentPlayer);\n      } else {\n        randomText = await fetchRandomActionOrTruth('dare', currentPlayer);\n      }\n\n      setRandomText(randomText);\n      setClickedCard(card);\n\n      if (card === 'left') {\n        gsap.to(leftCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      } else {\n        gsap.to(rightCardRef.current, { duration: 0.8, x: 0, y: 0, rotation: 0, scale: 1 });\n        gsap.to(leftCardRef.current, { duration: 0.8, x: -1000, opacity: 0 });\n        setTimeout(() => {\n          gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 180 });\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error handling card click:', error);\n    }\n  };\n\n  const resetCards = () => {\n    setClickedCard(null);\n    setRandomText('');\n    setDuration(null);\n    setRemainingTime(null);\n    setIsPaused(false);\n    setIsStarted(false);\n    clearInterval(intervalRef.current);\n    setCurrentPlayer(prevPlayer => prevPlayer === firstName1 ? firstName2 : firstName1);\n    gsap.to(leftCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(rightCardRef.current.querySelector('.inner'), { rotationY: 0 });\n    gsap.to(leftCardRef.current, { duration: 0.8, x: '-150px', rotation: -10, scale: 1, opacity: 1 });\n    gsap.to(rightCardRef.current, { duration: 0.8, x: '150px', rotation: 10, scale: 1, opacity: 1 });\n  };\n\n  const startTimer = () => {\n    if (!remainingTime) return;\n\n    setIsStarted(true);\n    setIsPaused(false);\n\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n  };\n\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setRemainingTime(duration);\n    setIsPaused(false);\n    startTimer();\n  };\n\n  const handleTimerButtonClick = () => {\n    if (remainingTime === 0) {\n      resetTimer();\n    } else if (!isStarted) {\n      startTimer();\n    } else if (isPaused) {\n      startTimer();\n    } else {\n      pauseTimer();\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  return (\n    <Container intensity={intensity}>\n      <CardsContainer>\n        <CardWrapper\n          ref={leftCardRef}\n          onClick={() => handleCardClick('left')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/junebaby.png')} />\n            <CardBack>\n              <Title>Truth & Dare</Title>\n              <CardText>{clickedCard === 'left' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer}</CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n        <CardWrapper\n          ref={rightCardRef}\n          onClick={() => handleCardClick('right')}\n        >\n          <CardInner className=\"inner\">\n            <CardFront image={require('../images/love.png')} />\n            <CardBack>\n              <Title>Truth & Dare</Title>\n              <CardText>{clickedCard === 'right' && randomText ? `${currentPlayer}, ${randomText}` : currentPlayer}</CardText>\n              <Footer>LoveTogether</Footer>\n            </CardBack>\n          </CardInner>\n        </CardWrapper>\n      </CardsContainer>\n      <ButtonContainer>\n        {clickedCard ? (\n          <>\n            <Button onClick={resetCards}>\n              <span role=\"img\" aria-label=\"Tour\">👤</span> Joueur suivant\n            </Button>\n            {duration && (\n              <TimerButton onClick={handleTimerButtonClick}>\n                {remainingTime === 0 ? 'Recommencer' : isPaused ? 'Reprendre' : `Pause (${formatTime(remainingTime)})`}\n              </TimerButton>\n            )}\n          </>\n        ) : (\n          <Button disabled>\n            <span role=\"img\" aria-label=\"Tour\">👤</span> À ton tour, {currentPlayer}\n          </Button>\n        )}\n        {!clickedCard && (\n          <Button onClick={changeIntensity}>\n            {intensity === 'low' ? '👀 Découverte' : intensity === 'medium' ? '🔥 Préliminaires' : '🔞 Dans l\\'action'}\n          </Button>\n        )}\n      </ButtonContainer>\n      <GrainEffect />\n      <Modal\n        isOpen={isModalOpen}\n        onClose={() => setModalOpen(false)}\n        onSave={handleSave}\n        selectedToys={selectedToys}\n        formData={{ firstName1, firstName2 }}\n        setFormData={({ firstName1, firstName2 }) => {\n          setFirstName1(firstName1);\n          setFirstName2(firstName2);\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default ActionVerite;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}