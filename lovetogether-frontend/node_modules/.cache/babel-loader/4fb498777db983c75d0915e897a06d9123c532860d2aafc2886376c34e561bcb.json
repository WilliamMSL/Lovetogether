{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport lowIntensityImage from '../images/logo-5.svg'; // Assurez-vous que c'est un SVG\nimport mediumIntensityImage from '../images/whitelogo-10.svg';\nimport highIntensityImage from '../images/whitelogo-20.svg';\nimport GrainEffect from './GrainEffect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({\n  intensity\n}) => intensity === 'low' ? '#FBF8F1' : intensity === 'medium' ? '#D51C2C' : '#5A0C13'};\n  position: relative;\n  z-index: 1;\n`;\n_c = Container;\nconst LogoContainer = styled.div`\n  position: relative;\n  width: 300px;\n  height: 300px;\n  background-image: url(${lowIntensityImage});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  mask-image: url(${lowIntensityImage});\n  mask-size: contain;\n  mask-repeat: no-repeat;\n  mask-position: center;\n`;\n_c2 = LogoContainer;\nconst Fill = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #ff4500; /* Couleur de remplissage */\n  transform-origin: bottom;\n  transform: scaleY(0);\n  transition: transform 1s ease-in-out; /* Peut ajuster le timing */\n`;\n_c3 = Fill;\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n\n// Rest of your styles...\n_c4 = CardsContainer;\nconst ActionVerite = () => {\n  _s();\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null); // État pour la durée du gage\n  const [remainingTime, setRemainingTime] = useState(null); // État pour le temps restant\n  const [isPaused, setIsPaused] = useState(false); // État pour savoir si le timer est en pause\n  const [isStarted, setIsStarted] = useState(false); // État pour savoir si le timer a été lancé\n  const intervalRef = useRef(null); // Utilisation de useRef pour stocker l'intervalle\n  const fillRef = useRef(null); // Référence pour l'élément de remplissage\n\n  // Other state variables...\n\n  const startTimer = () => {\n    if (!remainingTime) return;\n    setIsStarted(true);\n    setIsPaused(false); // Assurez-vous que l'état de pause est réinitialisé\n\n    gsap.to(fillRef.current, {\n      scaleY: 1,\n      duration: duration\n    }); // Remplissage avec GSAP\n\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n    gsap.pause(); // Pause the GSAP animation\n  };\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setRemainingTime(duration);\n    setIsPaused(false);\n    gsap.set(fillRef.current, {\n      scaleY: 0\n    }); // Réinitialiser le remplissage\n    startTimer(); // Redémarre le timer immédiatement après le reset\n  };\n\n  // Rest of your component logic...\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    intensity: intensity,\n    children: [/*#__PURE__*/_jsxDEV(LogoContainer, {\n      children: /*#__PURE__*/_jsxDEV(Fill, {\n        ref: fillRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GrainEffect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionVerite, \"yDn4XqSRk0/47kIBEmPCdlvw4+4=\");\n_c5 = ActionVerite;\nexport default ActionVerite;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"LogoContainer\");\n$RefreshReg$(_c3, \"Fill\");\n$RefreshReg$(_c4, \"CardsContainer\");\n$RefreshReg$(_c5, \"ActionVerite\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styled","gsap","axios","lowIntensityImage","mediumIntensityImage","highIntensityImage","GrainEffect","jsxDEV","_jsxDEV","Container","div","intensity","_c","LogoContainer","_c2","Fill","_c3","CardsContainer","_c4","ActionVerite","_s","clickedCard","setClickedCard","randomText","setRandomText","duration","setDuration","remainingTime","setRemainingTime","isPaused","setIsPaused","isStarted","setIsStarted","intervalRef","fillRef","startTimer","to","current","scaleY","setInterval","prevTime","clearInterval","pauseTimer","pause","resetTimer","set","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/ActionVerite.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport axios from 'axios';\nimport lowIntensityImage from '../images/logo-5.svg';  // Assurez-vous que c'est un SVG\nimport mediumIntensityImage from '../images/whitelogo-10.svg';\nimport highIntensityImage from '../images/whitelogo-20.svg';\nimport GrainEffect from './GrainEffect';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${({ intensity }) => \n    intensity === 'low' ? '#FBF8F1' : \n    intensity === 'medium' ? '#D51C2C' : \n    '#5A0C13'};\n  position: relative;\n  z-index: 1;\n`;\n\nconst LogoContainer = styled.div`\n  position: relative;\n  width: 300px;\n  height: 300px;\n  background-image: url(${lowIntensityImage});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  mask-image: url(${lowIntensityImage});\n  mask-size: contain;\n  mask-repeat: no-repeat;\n  mask-position: center;\n`;\n\nconst Fill = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #ff4500; /* Couleur de remplissage */\n  transform-origin: bottom;\n  transform: scaleY(0);\n  transition: transform 1s ease-in-out; /* Peut ajuster le timing */\n`;\n\nconst CardsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n\n// Rest of your styles...\n\nconst ActionVerite = () => {\n  const [clickedCard, setClickedCard] = useState(null);\n  const [randomText, setRandomText] = useState('');\n  const [duration, setDuration] = useState(null); // État pour la durée du gage\n  const [remainingTime, setRemainingTime] = useState(null); // État pour le temps restant\n  const [isPaused, setIsPaused] = useState(false); // État pour savoir si le timer est en pause\n  const [isStarted, setIsStarted] = useState(false); // État pour savoir si le timer a été lancé\n  const intervalRef = useRef(null); // Utilisation de useRef pour stocker l'intervalle\n  const fillRef = useRef(null); // Référence pour l'élément de remplissage\n\n  // Other state variables...\n\n  const startTimer = () => {\n    if (!remainingTime) return;\n\n    setIsStarted(true);\n    setIsPaused(false); // Assurez-vous que l'état de pause est réinitialisé\n\n    gsap.to(fillRef.current, { scaleY: 1, duration: duration }); // Remplissage avec GSAP\n\n    intervalRef.current = setInterval(() => {\n      setRemainingTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setIsPaused(true);\n          setIsStarted(false);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalRef.current);\n    gsap.pause(); // Pause the GSAP animation\n  };\n\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setRemainingTime(duration);\n    setIsPaused(false);\n    gsap.set(fillRef.current, { scaleY: 0 }); // Réinitialiser le remplissage\n    startTimer(); // Redémarre le timer immédiatement après le reset\n  };\n\n  // Rest of your component logic...\n\n  return (\n    <Container intensity={intensity}>\n      <LogoContainer>\n        <Fill ref={fillRef} />\n      </LogoContainer>\n      \n      <CardsContainer>\n        {/* Your card components... */}\n      </CardsContainer>\n\n      {/* Your buttons and other elements... */}\n      \n      <GrainEffect />\n    </Container>\n  );\n};\n\nexport default ActionVerite;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}