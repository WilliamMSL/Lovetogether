{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Navbar from './components/navbar/navbar';\nimport CardsWrapper from './components/CardsWrapper';\nimport { CardProvider, useCard } from './components/CardContext'; // Assurez-vous que CardProvider et useCard sont bien importés\nimport { PageProvider } from './components/PageContext';\nimport Logo from './components/Logo';\nimport ActionVerite from './components/ActionVerite'; // Assurez-vous d'importer ActionVerite\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  background-color: ${({\n  bgColor\n}) => bgColor};\n`;\n_c = BackgroundContainer;\nconst WhiteOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background-color: white;\n  z-index: 100000002;\n  pointer-events: none;\n`;\n_c2 = WhiteOverlay;\nconst OverlayContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100000003;\n  pointer-events: none;\n`;\n_c3 = OverlayContainer;\nconst ButtonContainer = styled.div`\n  position: absolute;\n  top: 70%;\n  pointer-events: auto;\n`;\n_c4 = ButtonContainer;\nconst CardsContainer = styled.div`\n  opacity: 1; // Définit l'opacité par défaut à 1 pour s'assurer que les cartes sont visibles\n  transform: translateY(50px);\n  transition: opacity 0.5s ease, transform 0.5s ease;\n`;\n_c5 = CardsContainer;\nconst MainComponentContent = () => {\n  _s();\n  const {\n    selectedCard\n  } = useCard(); // Utiliser le hook useCard pour accéder à selectedCard\n  const [animateLogo, setAnimateLogo] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState('#FFFFFF'); // Couleur de fond par défaut\n  const [hasEntered, setHasEntered] = useState(false); // État pour suivre si le bouton \"Entrer\" a été cliqué\n  const overlayRef = useRef(null);\n  const buttonRef = useRef(null);\n  const cardsRef = useRef(null);\n  const handleEnter = () => {\n    setAnimateLogo(true);\n    setHasEntered(true); // Met à jour l'état pour indiquer que l'utilisateur a cliqué sur \"Entrer\"\n\n    gsap.to([overlayRef.current, buttonRef.current], {\n      duration: 1,\n      opacity: 0,\n      ease: 'power2.out',\n      onComplete: () => {\n        if (overlayRef.current) {\n          overlayRef.current.style.display = 'none';\n          overlayRef.current.style.pointerEvents = 'none';\n        }\n        if (buttonRef.current) {\n          buttonRef.current.style.pointerEvents = 'none';\n        }\n        if (cardsRef.current) {\n          gsap.to(cardsRef.current, {\n            opacity: 1,\n            // S'assurer que l'opacité est bien à 1 après l'animation\n            y: 0,\n            duration: 1,\n            ease: 'power2.out',\n            delay: 0.2\n          });\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n    bgColor: backgroundColor,\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      animate: animateLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), selectedCard ? /*#__PURE__*/_jsxDEV(ActionVerite, {\n      card: selectedCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : hasEntered &&\n    /*#__PURE__*/\n    // Affiche CardsWrapper uniquement si \"Entrer\" a été cliqué\n    _jsxDEV(CardsContainer, {\n      ref: cardsRef,\n      children: /*#__PURE__*/_jsxDEV(CardsWrapper, {\n        setBackgroundColor: setBackgroundColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(WhiteOverlay, {\n      ref: overlayRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OverlayContainer, {\n      children: /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        ref: buttonRef,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEnter,\n          children: \"Entrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(MainComponentContent, \"i+xr0ywTxxjJMKSxKhY1adSdea8=\", false, function () {\n  return [useCard];\n});\n_c6 = MainComponentContent;\nconst MainComponent = () => {\n  return /*#__PURE__*/_jsxDEV(CardProvider, {\n    children: /*#__PURE__*/_jsxDEV(PageProvider, {\n      children: /*#__PURE__*/_jsxDEV(MainComponentContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_c7 = MainComponent;\nexport default MainComponent;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"BackgroundContainer\");\n$RefreshReg$(_c2, \"WhiteOverlay\");\n$RefreshReg$(_c3, \"OverlayContainer\");\n$RefreshReg$(_c4, \"ButtonContainer\");\n$RefreshReg$(_c5, \"CardsContainer\");\n$RefreshReg$(_c6, \"MainComponentContent\");\n$RefreshReg$(_c7, \"MainComponent\");","map":{"version":3,"names":["React","useState","useRef","Navbar","CardsWrapper","CardProvider","useCard","PageProvider","Logo","ActionVerite","styled","gsap","jsxDEV","_jsxDEV","BackgroundContainer","div","bgColor","_c","WhiteOverlay","_c2","OverlayContainer","_c3","ButtonContainer","_c4","CardsContainer","_c5","MainComponentContent","_s","selectedCard","animateLogo","setAnimateLogo","backgroundColor","setBackgroundColor","hasEntered","setHasEntered","overlayRef","buttonRef","cardsRef","handleEnter","to","current","duration","opacity","ease","onComplete","style","display","pointerEvents","y","delay","children","animate","fileName","_jsxFileName","lineNumber","columnNumber","card","ref","onClick","_c6","MainComponent","_c7","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Navbar from './components/navbar/navbar';\nimport CardsWrapper from './components/CardsWrapper';\nimport { CardProvider, useCard } from './components/CardContext'; // Assurez-vous que CardProvider et useCard sont bien importés\nimport { PageProvider } from './components/PageContext';\nimport Logo from './components/Logo';\nimport ActionVerite from './components/ActionVerite'; // Assurez-vous d'importer ActionVerite\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\n\nconst BackgroundContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  background-color: ${({ bgColor }) => bgColor};\n`;\n\nconst WhiteOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background-color: white;\n  z-index: 100000002;\n  pointer-events: none;\n`;\n\nconst OverlayContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100000003;\n  pointer-events: none;\n`;\n\nconst ButtonContainer = styled.div`\n  position: absolute;\n  top: 70%;\n  pointer-events: auto;\n`;\n\nconst CardsContainer = styled.div`\n  opacity: 1; // Définit l'opacité par défaut à 1 pour s'assurer que les cartes sont visibles\n  transform: translateY(50px);\n  transition: opacity 0.5s ease, transform 0.5s ease;\n`;\n\nconst MainComponentContent = () => {\n  const { selectedCard } = useCard(); // Utiliser le hook useCard pour accéder à selectedCard\n  const [animateLogo, setAnimateLogo] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState('#FFFFFF'); // Couleur de fond par défaut\n  const [hasEntered, setHasEntered] = useState(false); // État pour suivre si le bouton \"Entrer\" a été cliqué\n  const overlayRef = useRef(null);\n  const buttonRef = useRef(null);\n  const cardsRef = useRef(null);\n\n  const handleEnter = () => {\n    setAnimateLogo(true);\n    setHasEntered(true); // Met à jour l'état pour indiquer que l'utilisateur a cliqué sur \"Entrer\"\n\n    gsap.to([overlayRef.current, buttonRef.current], {\n      duration: 1,\n      opacity: 0,\n      ease: 'power2.out',\n      onComplete: () => {\n        if (overlayRef.current) {\n          overlayRef.current.style.display = 'none';\n          overlayRef.current.style.pointerEvents = 'none';\n        }\n\n        if (buttonRef.current) {\n          buttonRef.current.style.pointerEvents = 'none';\n        }\n\n        if (cardsRef.current) {\n          gsap.to(cardsRef.current, {\n            opacity: 1, // S'assurer que l'opacité est bien à 1 après l'animation\n            y: 0,\n            duration: 1,\n            ease: 'power2.out',\n            delay: 0.2,\n          });\n        }\n      },\n    });\n  };\n\n  return (\n    <BackgroundContainer bgColor={backgroundColor}>\n      <Logo animate={animateLogo} />\n      <Navbar />\n\n      {/* Affichage conditionnel basé sur l'état de selectedCard et hasEntered */}\n      {selectedCard ? (\n        <ActionVerite card={selectedCard} />\n      ) : (\n        hasEntered && ( // Affiche CardsWrapper uniquement si \"Entrer\" a été cliqué\n          <CardsContainer ref={cardsRef}>\n            <CardsWrapper setBackgroundColor={setBackgroundColor} />\n          </CardsContainer>\n        )\n      )}\n\n      <WhiteOverlay ref={overlayRef} />\n\n      <OverlayContainer>\n        <ButtonContainer ref={buttonRef}>\n          <button onClick={handleEnter}>Entrer</button>\n        </ButtonContainer>\n      </OverlayContainer>\n    </BackgroundContainer>\n  );\n};\n\nconst MainComponent = () => {\n  return (\n    <CardProvider>\n      <PageProvider>\n        <MainComponentContent />\n      </PageProvider>\n    </CardProvider>\n  );\n};\n\nexport default MainComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}