{"ast":null,"code":"var _jsxFileName = \"/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/CardsWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport HomeCard from './HomeCard';\nimport LottieAnimation from './LottieAnimation';\nimport { usePage } from './PageContext'; // Importez le contexte\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  height: 100vh;\n  z-index: 1;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  padding: 50px;\n`;\n_c = Wrapper;\nconst NewPageContent = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 2em;\n  color: #333;\n  flex-direction: column;\n`;\n_c2 = NewPageContent;\nconst CardsWrapper = ({\n  setBackgroundColor\n}) => {\n  _s();\n  const {\n    setCurrentPage\n  } = usePage(); // Utilisez le contexte pour définir la page actuelle\n  const [isLottieVisible, setLottieVisible] = useState(false);\n  const [isNewPageVisible, setNewPageVisible] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [reverseAnimation, setReverseAnimation] = useState(false); // Ajoutez un état pour l'animation inversée\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n    setLottieVisible(true);\n  };\n  const handleAnimationComplete = () => {\n    if (!reverseAnimation) {\n      setLottieVisible(false);\n      setNewPageVisible(true);\n      setCurrentPage(selectedCard);\n    } else {\n      setLottieVisible(false);\n      setNewPageVisible(false);\n      setSelectedCard(null);\n      setReverseAnimation(false);\n      setCurrentPage('home');\n    }\n  };\n  const handleNewButtonClick = () => {\n    setReverseAnimation(true);\n    setLottieVisible(true);\n  };\n  const getLottieData = () => {\n    switch (selectedCard) {\n      case 'card1':\n        return require('../path/to/lottie1.json');\n      case 'card2':\n        return require('../path/to/lottie2.json');\n      case 'card3':\n        return require('../path/to/lottie3.json');\n      default:\n        return null;\n    }\n  };\n  const getNewContent = () => {\n    switch (selectedCard) {\n      case 'card1':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"New content for Card 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this);\n      case 'card2':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"New content for Card 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }, this);\n      case 'card3':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"New content for Card 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isLottieVisible && !isNewPageVisible && /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(HomeCard, {\n        image: require('../images/junebaby.png'),\n        rotate: \"-5deg\",\n        onMouseEnter: () => setBackgroundColor('#FFD700'),\n        onMouseLeave: () => setBackgroundColor('#FBF8F1'),\n        onClick: () => handleCardClick('card1')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HomeCard, {\n        image: require('../images/yourself.png'),\n        rotate: \"0deg\",\n        onMouseEnter: () => setBackgroundColor('#FF69B4'),\n        onMouseLeave: () => setBackgroundColor('#FBF8F1'),\n        onClick: () => handleCardClick('card2')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HomeCard, {\n        image: require('../images/love.png'),\n        rotate: \"5deg\",\n        onMouseEnter: () => setBackgroundColor('#FF4500'),\n        onMouseLeave: () => setBackgroundColor('#FBF8F1'),\n        onClick: () => handleCardClick('card3')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), isLottieVisible && /*#__PURE__*/_jsxDEV(LottieAnimation, {\n      animationData: getLottieData(),\n      onComplete: handleAnimationComplete,\n      reverse: reverseAnimation // Passez l'état de l'animation inversée\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), !isLottieVisible && isNewPageVisible && /*#__PURE__*/_jsxDEV(NewPageContent, {\n      children: getNewContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavbarRight, {\n      handleNewButtonClick: handleNewButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n};\n_s(CardsWrapper, \"BTk/OY8vIq+GlacAvF2/H6hLMJA=\", false, function () {\n  return [usePage];\n});\n_c3 = CardsWrapper;\nexport default CardsWrapper;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"NewPageContent\");\n$RefreshReg$(_c3, \"CardsWrapper\");","map":{"version":3,"names":["React","useState","styled","HomeCard","LottieAnimation","usePage","jsxDEV","_jsxDEV","Fragment","_Fragment","Wrapper","div","_c","NewPageContent","_c2","CardsWrapper","setBackgroundColor","_s","setCurrentPage","isLottieVisible","setLottieVisible","isNewPageVisible","setNewPageVisible","selectedCard","setSelectedCard","reverseAnimation","setReverseAnimation","handleCardClick","card","handleAnimationComplete","handleNewButtonClick","getLottieData","require","getNewContent","children","fileName","_jsxFileName","lineNumber","columnNumber","image","rotate","onMouseEnter","onMouseLeave","onClick","animationData","onComplete","reverse","NavbarRight","_c3","$RefreshReg$"],"sources":["/Users/williamsl/Lovetogether/lovetogether-frontend/src/components/CardsWrapper.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport HomeCard from './HomeCard';\nimport LottieAnimation from './LottieAnimation';\nimport { usePage } from './PageContext'; // Importez le contexte\n\nconst Wrapper = styled.div`\n  display: flex;\n  height: 100vh;\n  z-index: 1;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  padding: 50px;\n`;\n\nconst NewPageContent = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 2em;\n  color: #333;\n  flex-direction: column;\n`;\n\nconst CardsWrapper = ({ setBackgroundColor }) => {\n  const { setCurrentPage } = usePage(); // Utilisez le contexte pour définir la page actuelle\n  const [isLottieVisible, setLottieVisible] = useState(false);\n  const [isNewPageVisible, setNewPageVisible] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [reverseAnimation, setReverseAnimation] = useState(false); // Ajoutez un état pour l'animation inversée\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setLottieVisible(true);\n  };\n\n  const handleAnimationComplete = () => {\n    if (!reverseAnimation) {\n      setLottieVisible(false);\n      setNewPageVisible(true);\n      setCurrentPage(selectedCard);\n    } else {\n      setLottieVisible(false);\n      setNewPageVisible(false);\n      setSelectedCard(null);\n      setReverseAnimation(false);\n      setCurrentPage('home');\n    }\n  };\n\n  const handleNewButtonClick = () => {\n    setReverseAnimation(true);\n    setLottieVisible(true);\n  };\n\n  const getLottieData = () => {\n    switch (selectedCard) {\n      case 'card1':\n        return require('../path/to/lottie1.json');\n      case 'card2':\n        return require('../path/to/lottie2.json');\n      case 'card3':\n        return require('../path/to/lottie3.json');\n      default:\n        return null;\n    }\n  };\n\n  const getNewContent = () => {\n    switch (selectedCard) {\n      case 'card1':\n        return <div>New content for Card 1</div>;\n      case 'card2':\n        return <div>New content for Card 2</div>;\n      case 'card3':\n        return <div>New content for Card 3</div>;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      {!isLottieVisible && !isNewPageVisible && (\n        <Wrapper>\n          <HomeCard\n            image={require('../images/junebaby.png')}\n            rotate=\"-5deg\"\n            onMouseEnter={() => setBackgroundColor('#FFD700')}\n            onMouseLeave={() => setBackgroundColor('#FBF8F1')}\n            onClick={() => handleCardClick('card1')}\n          />\n          <HomeCard\n            image={require('../images/yourself.png')}\n            rotate=\"0deg\"\n            onMouseEnter={() => setBackgroundColor('#FF69B4')}\n            onMouseLeave={() => setBackgroundColor('#FBF8F1')}\n            onClick={() => handleCardClick('card2')}\n          />\n          <HomeCard\n            image={require('../images/love.png')}\n            rotate=\"5deg\"\n            onMouseEnter={() => setBackgroundColor('#FF4500')}\n            onMouseLeave={() => setBackgroundColor('#FBF8F1')}\n            onClick={() => handleCardClick('card3')}\n          />\n        </Wrapper>\n      )}\n\n      {isLottieVisible && (\n        <LottieAnimation\n          animationData={getLottieData()}\n          onComplete={handleAnimationComplete}\n          reverse={reverseAnimation} // Passez l'état de l'animation inversée\n        />\n      )}\n\n      {!isLottieVisible && isNewPageVisible && (\n        <NewPageContent>\n          {getNewContent()}\n        </NewPageContent>\n      )}\n      <NavbarRight handleNewButtonClick={handleNewButtonClick} /> {/* Passez la fonction */}\n    </>\n  );\n};\n\nexport default CardsWrapper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}